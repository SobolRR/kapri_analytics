[{"/Users/sobolrr/Desktop/kapri_analytics/src/index.js":"1","/Users/sobolrr/Desktop/kapri_analytics/src/App.js":"2","/Users/sobolrr/Desktop/kapri_analytics/src/data.js":"3","/Users/sobolrr/Desktop/kapri_analytics/src/utils/utils.js":"4","/Users/sobolrr/Desktop/kapri_analytics/src/core/api.js":"5","/Users/sobolrr/Desktop/kapri_analytics/src/components/Sales/SalesTable.js":"6","/Users/sobolrr/Desktop/kapri_analytics/src/components/Sales/SalesTable.functions.js":"7","/Users/sobolrr/Desktop/kapri_analytics/src/components/Stock/StockTable.js":"8","/Users/sobolrr/Desktop/kapri_analytics/src/components/Stock/StockTable.functions.js":"9","/Users/sobolrr/Desktop/kapri_analytics/src/components/common/BrandsReport/BrandsReport.js":"10","/Users/sobolrr/Desktop/kapri_analytics/src/components/common/BrandsReport/BrandsReport.functions.js":"11"},{"size":257,"mtime":1612873913450,"results":"12","hashOfConfig":"13"},{"size":3335,"mtime":1614941522432,"results":"14","hashOfConfig":"13"},{"size":1703,"mtime":1615372687913,"results":"15","hashOfConfig":"13"},{"size":2376,"mtime":1615299673543,"results":"16","hashOfConfig":"13"},{"size":1787,"mtime":1613639538597,"results":"17","hashOfConfig":"13"},{"size":2965,"mtime":1615366044833,"results":"18","hashOfConfig":"13"},{"size":2523,"mtime":1615295233606,"results":"19","hashOfConfig":"13"},{"size":2320,"mtime":1615286814425,"results":"20","hashOfConfig":"13"},{"size":1428,"mtime":1615286781961,"results":"21","hashOfConfig":"13"},{"size":2845,"mtime":1615369050141,"results":"22","hashOfConfig":"13"},{"size":679,"mtime":1615374201258,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"147gwfw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sobolrr/Desktop/kapri_analytics/src/index.js",[],["48","49"],"/Users/sobolrr/Desktop/kapri_analytics/src/App.js",[],"/Users/sobolrr/Desktop/kapri_analytics/src/data.js",[],"/Users/sobolrr/Desktop/kapri_analytics/src/utils/utils.js",[],"/Users/sobolrr/Desktop/kapri_analytics/src/core/api.js",[],"/Users/sobolrr/Desktop/kapri_analytics/src/components/Sales/SalesTable.js",["50"],"/Users/sobolrr/Desktop/kapri_analytics/src/components/Sales/SalesTable.functions.js",[],"/Users/sobolrr/Desktop/kapri_analytics/src/components/Stock/StockTable.js",["51"],"import React,{useEffect,useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport { Table} from 'antd';\nimport { brands} from '../../data'\nimport {stockColumns} from '../../utils/utils'\nimport { fetchStock } from '../../core/api';\nimport { Checkbox } from 'antd';\nimport { Menu, Dropdown, Button } from 'antd';\nimport { calculateStock, createDefaultDataSource, filterByBrand } from './StockTable.functions';\n\n\n\nexport const StockTable = ({fetchFunc}) => {\n  const [dataSource, setDataSource] =useState(null)\n  const [isLoading,setIsLoading] = useState(false)\n  const [inTransit, setInTransit] =  useState(false)\n  const [brand,setBrand] = useState(\"all\")\n  const {sex} = useParams()\n  \n  const menu = \n (\n  <Menu theme=\"dark\" selectedKeys={[brand]}>\n    {brands.map(brand=>{\n      return   (\n      <Menu.Item  onClick ={()=>{setBrand(brand)}} key={brand}>\n        {brand}   \n    </Menu.Item>)\n    })}\n  \n  </Menu>\n);\n\n  const updateDataSource = async () => {\n    const newDataSource = createDefaultDataSource(sex);\n    setIsLoading(true);\n    const options = { folderName: sex, inTransit };\n    let products = await fetchStock(options);\n\n    if (brand !== \"all\") {\n      products = filterByBrand(products,brand)\n    }\n    const stockData = calculateStock(products,sex, inTransit)\n   \n    newDataSource.forEach((item) => {\n      const res = stockData.find((el) => item.name === el.name);\n      let totalW = 0;\n      let totalD = 0;\n\n      for (let size in res.sizes) {\n        totalW += res.sizes[size].width;\n        totalD += res.sizes[size].depth;\n        item[size] = `${res.sizes[size].depth} (${res.sizes[size].width}) `;\n      }\n      item.total = `${totalD} (${totalW})`;\n    });\n\n    setDataSource(newDataSource);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    updateDataSource(fetchFunc);\n  }, [sex, inTransit, brand]);\n\n  return (\n    <>\n      <Dropdown  overlay={menu} placement=\"bottomCenter\">\n        <Button>Бренд</Button>\n      </Dropdown>\n      <Checkbox style={{\"marginLeft\":\"30px\"}}onChange={() => setInTransit((prev) => !prev)}>\n        In transit\n      </Checkbox>\n      <Table\n        dataSource={dataSource}\n        columns={stockColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\n\n","/Users/sobolrr/Desktop/kapri_analytics/src/components/Stock/StockTable.functions.js",[],"/Users/sobolrr/Desktop/kapri_analytics/src/components/common/BrandsReport/BrandsReport.js",["52"],"/Users/sobolrr/Desktop/kapri_analytics/src/components/common/BrandsReport/BrandsReport.functions.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":61,"column":6,"nodeType":"59","endLine":61,"endColumn":56,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":63,"column":6,"nodeType":"59","endLine":63,"endColumn":29,"suggestions":"62"},{"ruleId":"57","severity":1,"message":"58","line":54,"column":7,"nodeType":"59","endLine":54,"endColumn":32,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateDataSource'. Either include it or remove the dependency array.","ArrayExpression",["66"],"React Hook useEffect has missing dependencies: 'fetchFunc' and 'updateDataSource'. Either include them or remove the dependency array.",["67"],["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [sex, counterparty, showSellSum, momentFrom, momentTo, updateDataSource]",{"range":"75","text":"76"},"Update the dependencies array to be: [sex, inTransit, brand, updateDataSource, fetchFunc]",{"range":"77","text":"78"},"Update the dependencies array to be: [sex, momentFrom, momentTo, updateDataSource]",{"range":"79","text":"80"},[2087,2137],"[sex, counterparty, showSellSum, momentFrom, momentTo, updateDataSource]",[1826,1849],"[sex, inTransit, brand, updateDataSource, fetchFunc]",[2247,2272],"[sex, momentFrom, momentTo, updateDataSource]"]