{"version":3,"sources":["data.js","utils/utils.js","core/api.js","components/Stock/StockTable.functions.js","components/Stock/StockTable.js","components/Sales/SalesTable.functions.js","components/Sales/SalesTable.js","components/common/BrandsReport/BrandsReport.functions.js","components/common/BrandsReport/BrandsReport.js","App.js","index.js"],"names":["dateFormat","productGroups","girls","boys","productNamesToFolders","sizes","brands","getSize","name","match","defineProductsBySex","sex","defineRenderValue","tableType","title","row","value","indexOf","showSellSum","additionalData","sellSum","totalSellSum","toFixed","alphabetSortingFunc","a","b","nameA","toLowerCase","nameB","sortFuntions","brandsReport","parseFloat","sales","parseInt","createColumns","titles","res","map","idx","sorting","sorter","dataIndex","key","render","props","style","background","defineBackground","children","unshift","width","stockTitles","sellColumns","stockColumns","brandsReportColumns","folderLinks","unisex","axios","defaults","headers","post","instance","create","baseURL","fetchStock","options","folderName","inTransit","stockMode","folderFilter","link","result","data","fetchSales","counterparty","momentFrom","momentTo","moment","Date","format","counterpartyFilter","fetchCounterparty","filterByBrand","products","brand","filter","product","calculateStock","stockData","reduce","acc","size","depth","createDefaultStock","forEach","good","item","folder","stock","createDefaultDataSource","initial","sizesInitialValues","NB","total","StockTable","fetchFunc","useState","dataSource","setDataSource","isLoading","setIsLoading","setInTransit","setBrand","useParams","menu","theme","selectedKeys","Item","onClick","updateDataSource","newDataSource","find","el","totalW","totalD","useEffect","overlay","placement","onChange","prev","columns","columnstock","pagination","bordered","loading","mapSexToSymbol","filterBySex","str","re","checkSex","assortment","updateSalesData","productNames","filterByProductName","productFolder","findFolderByProductName","sellQuantity","Number","currentSellSum","formattedSellSum","countProductFolderSellSumBySize","Object","keys","RangePicker","DatePicker","SalesTable","counterparties","setCounterparty","setShowSellSum","counterpartyMenu","currentCounterparty","meta","href","moments","_d","checked","createBrandsDefaultDataSource","brandItems","shift","sum","profit","sellCostSum","profitability","BrandsReport","undefined","findIndex","SubMenu","Menu","App","state","current","handleClick","e","setState","then","this","mode","to","exact","path","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.339b20a4.chunk.js","sourcesContent":["export const dateFormat = 'YYYY-MM-DD HH:mm:ss';\n\nexport const productGroups = {\n  girls:[\n    \"Аксессуары\",\n    \"Боди (длинный рукав)\",\n    \"Боди (короткий рукав)\",\n    \"Кофты\",\n    \"Наборы\",\n    \"Песочник\",\n    \"Пижамы\",\n    \"Платья\",\n    \"Регланы\",\n    \"Футболки\",\n    \"Человечки\",\n    \"Шорты\",\n    \"Штаны\",\n  ],\n  boys:[\n    \"Аксессуары\",\n    \"Боди (длинный рукав)\",\n    \"Боди (короткий рукав)\",\n    \"Кофты\",\n    \"Наборы\",\n    \"Песочник\",\n    \"Пижамы\",\n    \"Регланы\",\n    \"Футболки\",\n    \"Человечки\",\n    \"Шорты\",\n    \"Штаны\",\n    ]\n}\n        \n\n\nexport const productNamesToFolders = {\n    \"ДР\":\"Боди (длинный рукав)\",\n    \"КР\":\"Боди (короткий рукав)\",\n    \"Кофт\":\"Кофты\",\n    \"Набор\":\"Наборы\",\n    \"Песочник\":\"Песочник\",\n    \"Пижам\":\"Пижамы\",\n    \"Плать\":\"Платья\",\n    \"Реглан\":\"Регланы\",\n    \"Футболк\":\"Футболки\",\n    \"Человеч\":\"Человечки\",\n    \"Шорты\":\"Шорты\",\n    \"Штаны\": \"Штаны\",\n    \"Лосины\":\"Штаны\",\n    \"Костюм\":\"Наборы\"\n}\nexport const sizes = [\n\"NB\",\n\"0-3\",\n\"1-2\",\n\"2-4\",\n\"3-6\",\n\"4-6\",\n\"6-9\",\n\"9-12\",\n\"12-18\",\n\"18-24\",\n\"24-36\",\n]\n\nexport const brands = [\n  \"all\",\n  \"bi baby\",\n  \"bimini\",\n  \"biorganic\",\n  \"Disney baby\",\n  \"DreamKid\",\n  \"Dunnes\",\n  \"H&M\",\n  \"Little Angel\",\n  \"George\",\n  \"little life\",\n  \"Marks & Spencer\",\n  \"Matalan\",\n  \"Next\",\n  \"Tasco\",\n  \"KEHA\",\n  \"Мамине чудо\"\n];\n\n","import { sizes } from \"../data\"\n\nexport function getSize(name){\n  const re = /([0-9]+)-([0-9]+)|NB/g;\n  return name.match(re)[0];\n}\n\nexport function defineProductsBySex(sex,productGroups){\n  return sex === \"girls\" || sex === \"common\" ? productGroups['girls'] : productGroups['boys']\n}\n\n\n\nfunction defineRenderValue(tableType,title, row,value){\n  switch(tableType){\n    case \"sales\":\n      return (sizes.indexOf(title)) !== -1 ?\n      value &&`${row.showSellSum ?  row.additionalData.sellSum[title] : value} (${((row.additionalData.sellSum[title])*100/row.totalSellSum).toFixed(2)}%)` \n      : value\n      default:\n        return value\n  } \n\n }\n\nconst alphabetSortingFunc =function(a, b){\n  var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase()\n  if (nameA < nameB) \n    return -1\n  if (nameA > nameB)\n    return 1\n  return 0 \n  }\n\nfunction defineBackground(title,value){\n  return title === \"total\" ? \"white\" : parseInt(value) > 0 ? \"#C7E78F\":\"#e6948e\"\n}\n\nconst sortFuntions = {\n  brandsReport: (title) => (a, b) =>  parseFloat(a[title]) - parseFloat(b[title]),\n  sales: (title) => (a, b) => parseInt(a[title]) - parseInt(b[title]),\n  \n};\n\nexport function createColumns(titles,tableType){\n\n    const res = titles.map((title,idx)=>{\n      const sorting =\n        !!sortFuntions[tableType] && sizes.indexOf(title) === -1\n          ? { sorter: sortFuntions[tableType](title) }\n          : {};\n      return {\n        title: title,\n        dataIndex: title,\n        key: idx,\n        ...sorting,\n        render(value, row) {\n          const background = defineBackground(title, value);\n          return {\n            props: {\n              style: { background },\n            },\n            children: (\n              <div>{defineRenderValue(tableType, title, row, value)} </div>\n            ),\n          };\n        },\n      };\n    })\n    res.unshift(  {\n      title: 'Название',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: alphabetSortingFunc,\n      width:200\n    })\n    \n    return res\n  }\n  \nconst stockTitles = [...sizes,'total']\nconst sellTitles = [...sizes,'total',\"totalSellSum\"]\nconst brandsReportTitles=['sum','profit',\"profitability\"]\n\nexport const sellColumns = createColumns(sellTitles,\"sales\")\nexport const stockColumns = createColumns(stockTitles, \"stock\")\nexport const brandsReportColumns = createColumns(brandsReportTitles, \"brandsReport\")\n\n","import axios from \"axios\"\nimport moment from 'moment';\nimport { dateFormat } from \"../data\";\n\n\nconst folderLinks = {\n  girls:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/c9ac503e-1d16-11eb-0a80-050d002dcd9a\",\n  boys:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/00cfa023-1d16-11eb-0a80-050d002dade8\",\n  unisex:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/73475072-28e9-11eb-0a80-029000103030\"\n}\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\nconst instance = axios.create({baseURL:\"https://kapri-server.herokuapp.com\"})\n\nexport const fetchStock = async (options) => {\n  const { folderName, inTransit } = options;\n  const stockMode = inTransit ? \"all\" : \"positiveOnly\";\n  const folderFilter = folderName === 'common' ?  \"\" : `&filter=productFolder=${folderLinks[folderName]}`\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/stock/all?groupBy=consignment&filter=stockMode=${stockMode}&filter=inTransitOnly=${inTransit}` + folderFilter\n\n  const result = await instance.post(\"/\", { link });\n    return result.data;\n}\n\nexport const fetchSales = async (\n  counterparty,\n  momentFrom = \"2020-11-01 00:00:00\",\n  momentTo = moment(new Date()).format(dateFormat),\n) => {\n  const counterpartyFilter = !!counterparty ?`&filter=counterparty=${counterparty}` : \"\"\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/profit/byvariant?momentFrom=${momentFrom}&momentTo=${momentTo}` + counterpartyFilter\n\n  const result = await instance.post(\n    '/',{link},\n   \n  );\n  return result.data\n};\n\nexport const fetchCounterparty = async () => {\n  const link = \"https://online.moysklad.ru/api/remap/1.2/report/profit/bycounterparty\"\n  const result = await instance.post(\"/\", { link });\n  return result.data\n}\n\n","import { productGroups, sizes } from \"../../data\"\nimport { defineProductsBySex, getSize } from \"../../utils/utils\"\n\nfunction createDefaultStock(sex){\n    const products = defineProductsBySex(sex,productGroups)\n    return products.map((product)=>{\n      return    {\n        name: product,\n        sizes: sizes.reduce((acc,size)=>{\n          return{...acc,[size]:{ width: 0, depth: 0,inTransit:0,}}\n        },{})\n      }\n    })\n  }\n\nexport const filterByBrand = (products, brand) => {\n    return products.filter((product) => {\n       return product.name.indexOf(brand) !== -1;\n     });\n   }\n   \nexport function calculateStock(products, sex, inTransit) {\n  const stockData = createDefaultStock(sex);\n  products.forEach((good) => {\n    const size = getSize(good.name);\n    stockData.forEach((item) => {\n      if (good.folder.name === item.name && !!item.sizes[size]) {\n        item.sizes[size].width += 1;\n        item.sizes[size].depth += inTransit ? good.inTransit : good.stock;\n      }\n    });\n  });\n  return stockData;\n}\n   \nexport function createDefaultDataSource(sex,initial=\"\"){\n  const products = defineProductsBySex(sex, productGroups)\n  const sizesInitialValues = sizes.reduce((acc,size)=>{\n    return {...acc,[size]:initial}\n  },{})\n  return products.map((product,idx)=>{\n  \n    return {\n      key: idx,\n      name: product,\n      NB: initial,\n      ...sizesInitialValues,\n      total: initial,\n      \n     \n    };\n  })\n}","import React,{useEffect,useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport { Table} from 'antd';\nimport { brands} from '../../data'\nimport {stockColumns} from '../../utils/utils'\nimport { fetchStock } from '../../core/api';\nimport { Checkbox } from 'antd';\nimport { Menu, Dropdown, Button } from 'antd';\nimport { calculateStock, createDefaultDataSource, filterByBrand } from './StockTable.functions';\n\n\n\nexport const StockTable = ({fetchFunc}) => {\n  const [dataSource, setDataSource] =useState(null)\n  const [isLoading,setIsLoading] = useState(false)\n  const [inTransit, setInTransit] =  useState(false)\n  const [brand,setBrand] = useState(\"all\")\n  const {sex} = useParams()\n  \n  const menu = \n (\n  <Menu theme=\"dark\" selectedKeys={[brand]}>\n    {brands.map(brand=>{\n      return   (\n      <Menu.Item  onClick ={()=>{setBrand(brand)}} key={brand}>\n        {brand}   \n    </Menu.Item>)\n    })}\n  \n  </Menu>\n);\n\n  const updateDataSource = async () => {\n    const newDataSource = createDefaultDataSource(sex);\n    setIsLoading(true);\n    const options = { folderName: sex, inTransit };\n    let products = await fetchStock(options);\n\n    if (brand !== \"all\") {\n      products = filterByBrand(products,brand)\n    }\n    const stockData = calculateStock(products,sex, inTransit)\n   \n    newDataSource.forEach((item) => {\n      const res = stockData.find((el) => item.name === el.name);\n      let totalW = 0;\n      let totalD = 0;\n\n      for (let size in res.sizes) {\n        totalW += res.sizes[size].width;\n        totalD += res.sizes[size].depth;\n        item[size] = `${res.sizes[size].depth} (${res.sizes[size].width}) `;\n      }\n      item.total = `${totalD} (${totalW})`;\n    });\n\n    setDataSource(newDataSource);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    updateDataSource(fetchFunc);\n  }, [sex, inTransit, brand]);\n\n  return (\n    <>\n      <Dropdown  overlay={menu} placement=\"bottomCenter\">\n        <Button>Бренд</Button>\n      </Dropdown>\n      <Checkbox style={{\"marginLeft\":\"30px\"}}onChange={() => setInTransit((prev) => !prev)}>\n        In transit\n      </Checkbox>\n      <Table\n        dataSource={dataSource}\n        columns={stockColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\n\n","import { productGroups, productNamesToFolders, sizes } from \"../../data\";\nimport { defineProductsBySex, getSize } from \"../../utils/utils\";\n\nconst mapSexToSymbol = {\n    boys: \"М\",\n    girls: \"Д\",\n    unisex: \"У\",\n  };\n\n\nexport function checkSex(str,sex){\n    const re = `^[${mapSexToSymbol[sex]}]{1}`;\n    const res = str.match(re);\n    if( res) {\n        return mapSexToSymbol[sex] === res[0];\n    }\n}\n\nexport function filterBySex(products, sex){\n    return products.filter((product) => {\n        return checkSex(product.assortment.name, sex);\n    })\n}\n\nexport function filterByProductName(products,name){\n    return products.filter(\n      (product) => product.assortment.name.indexOf(name) !== -1\n    );\n}\n\nexport function findFolderByProductName(dataSource,name){\n    return  dataSource.find((productFolder) => {\n        return productFolder.name === productNamesToFolders[name];\n      });\n}\nexport function countProductFolderSellSumBySize(productFolder,product, size){\n  const currentSellSum = productFolder[\"additionalData\"].sellSum[size]\n  const formattedSellSum = (product.sellSum / 100).toFixed(0)\n  if (currentSellSum) {\n    productFolder[\"additionalData\"].sellSum[size] += Number(formattedSellSum);\n  } else {\n    productFolder[\"additionalData\"].sellSum[size] = Number(formattedSellSum);\n  }\n}\nexport function updateSalesData(productNames,products,sex,showSellSum){\n  const dataSource = createDefaultDataSource(sex, 0,showSellSum);\n\n  productNames.forEach((name) => {\n    filterByProductName(products, name).forEach((product) => {\n      const productFolder = findFolderByProductName(dataSource, name);\n      const size = getSize(product.assortment.name);\n      productFolder[size] += product.sellQuantity;\n      productFolder[\"total\"] += product.sellQuantity;\n      productFolder[\"sellSum\"] = +product.sellSum;\n      productFolder[\"totalSellSum\"] += Number((product.sellSum / 100).toFixed(0));\n      countProductFolderSellSumBySize(productFolder, product, size)      \n    });\n  });\n  return dataSource;\n}\n\nexport function createDefaultDataSource(sex,initial=\"\",showSellSum){\n  const products = defineProductsBySex(sex, productGroups)\n  const sizesInitialValues = sizes.reduce((acc,size)=>{\n    return {...acc,[size]:initial}\n  },{})\n  return products.map((product,idx)=>{\n  \n    return {\n      key: idx,\n      name: product,\n      NB: initial,\n      ...sizesInitialValues,\n      total: initial,\n      totalSellSum: initial,\n      additionalData: {\n        sellSum: {},\n      },\n      showSellSum\n    };\n  })\n}","import React,{useEffect,  useState} from 'react'\nimport { fetchSales } from '../../core/api'\nimport {productNamesToFolders,dateFormat} from '../../data'\nimport { sellColumns, } from '../../utils/utils'\nimport { DatePicker, Dropdown, Table, Button, Menu } from \"antd\";\nimport moment from 'moment';\nimport { useParams } from 'react-router-dom'\nimport { filterBySex, updateSalesData } from './SalesTable.functions';\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\n\nconst productNames = Object.keys(productNamesToFolders);\n\nconst { RangePicker } = DatePicker;\n\nexport const SalesTable = ({counterparties}) => {\n  const { sex } = useParams();\n  const [dataSource, setDataSource] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [counterparty, setCounterparty] = useState(null);\n  const [showSellSum, setShowSellSum] = useState(true)\n\n  const counterpartyMenu = counterparties && (\n    <Menu theme=\"dark\" selectedKeys={[counterparty ? counterparty.name :\"All\"]}>\n      <Menu.Item\n        onClick={() => {\n          setCounterparty(null);\n        }}\n        key={\"All\"}\n      >\n        {\"All\"}\n      </Menu.Item>\n      {counterparties.map((item) => {\n        return (\n          <Menu.Item\n            onClick={() => {\n              setCounterparty(item.counterparty);\n            }}\n            key={item.counterparty.name}\n          >\n            {item.counterparty.name}\n          </Menu.Item>\n        );\n      })}\n    </Menu>\n  );\n\n  const updateDataSource = async ( counterparty,momentFrom, momentTo,) => {\n    setIsLoading(true);\n    let products = await fetchSales(counterparty,momentFrom, momentTo);\n     products = sex === \"common\" ? products : filterBySex(products, sex);\n    setDataSource(updateSalesData(productNames, products, sex,showSellSum));\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    let currentCounterparty = !!counterparty ? counterparty.meta.href :counterparty\n    updateDataSource(currentCounterparty);\n  }, [sex,counterparty,showSellSum]);\n  return (\n    <>\n        <RangePicker\n          onChange={(moments) => {\n            updateDataSource(counterparty,\n              moment(moments[0]._d).format(dateFormat),\n              moment(moments[1]._d).format(dateFormat)\n            );\n          }}\n          format={dateFormat}\n          size=\"large\"\n        />\n        <Dropdown overlay={counterpartyMenu}  placement=\"bottomCenter\">\n          <Button>{counterparty ? counterparty.name : \"Контрагент\"}</Button>\n        </Dropdown>\n        <Checkbox checked={showSellSum} style={{\"marginLeft\":\"30px\"}}onChange={() => setShowSellSum((prev) => !prev)}>\n        SellSum\n      </Checkbox>\n      <Table\n        dataSource={dataSource}\n        columns={sellColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\n\n\n","import { brands } from \"../../../data\";\n\nexport function createBrandsDefaultDataSource(){\n    const brandItems = [...brands]\n    brandItems.shift()\n    return brandItems.map((brand,idx)=>{\n        \n        return {\n          key: idx,\n          name: brand,\n          sum:0,\n          profit:0,\n          sellCostSum:0,\n          profitability:0\n        };\n      })\n  }\n\n  export function getBrand(name){\n    const re = /\\(([a-zA-Zа-яА-я\\s&]{0,})/gi\n    return name.match(re)\n  }\n\n\n  export const filterByBrand = (products, brand) => {\n    return products.filter((product) => {\n       return product.assortment.name.indexOf(brand) !== -1;\n     });\n   }\n","import React,{useEffect, useState} from 'react'\nimport { useParams } from 'react-router-dom'\nimport { fetchSales } from '../../../core/api';\nimport { brandsReportColumns } from '../../../utils/utils';\nimport { createBrandsDefaultDataSource,filterByBrand } from './BrandsReport.functions';\nimport { DatePicker, Table } from 'antd';\nimport moment from 'moment';\nimport { filterBySex } from '../../Sales/SalesTable.functions';\nimport { brands, dateFormat } from '../../../data';\nconst { RangePicker } = DatePicker;\n\n\nexport const BrandsReport = () => {\n    const { sex } = useParams();\n    const [dataSource, setDataSource] = useState(createBrandsDefaultDataSource());\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    const updateDataSource = async (momentFrom, momentTo) => {\n        setIsLoading(true);\n        let data = await fetchSales(undefined,momentFrom,momentTo);\n         data = sex === \"common\" ? data : filterBySex(data, sex);\n         let dataSource = createBrandsDefaultDataSource();\n         brands.forEach((brand)=> {\n             const products = filterByBrand(data, brand);\n             products.forEach((product)=>{\n                 const idx = dataSource.findIndex((item)=> item.name === brand)\n                 \n                 if(idx > -1){  dataSource[idx] = {\n                     ...dataSource[idx],\n                     sum: dataSource[idx].sum += +(product.sellSum),\n                     profit:dataSource[idx].profit += +(product.profit),\n                     sellCostSum:dataSource[idx].sellCostSum += +(product.sellCostSum)\n                 }}           \n             })\n         })\n        dataSource= dataSource.map((brand)=>{\n            const profitability = +(brand.profit * 100 / brand.sellCostSum).toFixed(2)\n           return {...brand,\n            sum:(brand.sum / 100).toFixed(2),\n            profit:(brand.profit / 100).toFixed(2),\n                profitability: !!profitability ? profitability + \"%\" : 0\n            }\n         })\n\n         setDataSource(dataSource)\n        setIsLoading(false);\n      };\n    useEffect(()=>{\n    updateDataSource()\n    },[sex])\n\n    return (\n        <>\n        <RangePicker\n          onChange={(moments) => {\n            updateDataSource(\n              moment(moments[0]._d).format(dateFormat),\n              moment(moments[1]._d).format(dateFormat)\n            );\n          }}\n          format={dateFormat}\n          size=\"large\"\n        />\n        <Table\n        style={{width:\"70vw\"}}\n        dataSource={dataSource}\n        columns={brandsReportColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n         />\n      </>\n    )\n}\n","import React from 'react'\nimport {Route,NavLink} from 'react-router-dom'\n\n\n\nimport { Menu } from 'antd';\nimport { StockTable } from './components/Stock/StockTable';\nimport { SalesTable } from './components/Sales/SalesTable';\nimport { fetchCounterparty } from './core/api';\nimport { BrandsReport } from './components/common/BrandsReport/BrandsReport';\n\nconst { SubMenu } = Menu;\n\nclass App extends React.Component {\n  state = {\n    current: null,\n    counterparties:null\n  };\n  componentDidMount(){\n    fetchCounterparty().then((counterparties) => {\n      this.setState({counterparties})\n    });\n  }\n\n  handleClick = e => {\n    this.setState({ current: e.key });\n  };\n\n  render() {\n    const { current } = this.state;\n    return (\n      <>\n        \n          <Menu\n            onClick={this.handleClick}\n            selectedKeys={[current]}\n            mode=\"horizontal\"\n            theme=\"dark\"\n          >\n            <SubMenu key=\"boys\" title=\"Мальчики\">\n              <Menu.Item key=\"boysStock\">\n                <NavLink to=\"/stock/boys\">Oстатки </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"boysSales\">\n                <NavLink to=\"/sales/boys\">Продажи </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"boysBrandReport\">\n                <NavLink to=\"/brandsReport/boys\">Отчет по брендам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n\n            <SubMenu key=\"girls\" title=\"Девочки\">\n              <Menu.Item key=\"girlsStock\">\n                <NavLink to=\"/stock/girls\">Oстатки </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"girlsSales\">\n                <NavLink to=\"/sales/girls\">Продажи </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"girlsBrandReport\">\n                <NavLink to=\"/brandsReport/girls\">Отчет по брендам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"unisex\" title=\"Унисекс\">\n              <Menu.Item key=\"unisexStock\">\n                <NavLink to=\"/stock/unisex\">Oстатки</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"unisexSales\">\n                <NavLink to=\"/sales/unisex\">Продажи</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"unisexBrandReport\">\n                <NavLink to=\"/brandsReport/unisex\">Отчет по брендам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"common\" title=\"Общее\">\n              <Menu.Item key=\"commonStock\">\n                <NavLink to=\"/stock/common\">Oстатки</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"commonSales\">\n                <NavLink to=\"/sales/common\">Продажи</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"commonBrandReport\">\n                <NavLink to=\"/brandsReport/common\">Отчет по брендам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n          </Menu>\n        \n        <Route exact path=\"/stock/:sex\" render={() => <StockTable />} />\n        <Route path=\"/sales/:sex\" render={() => <SalesTable counterparties={this.state.counterparties}/>} />\n        <Route path=\"/brandsReport/:sex\" render={() => <BrandsReport/>} />\n      </>\n    );\n  }\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <HashRouter>\n      <App />\n   </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}