{"version":3,"sources":["data.js","utils/utils.js","core/api.js","components/Stock/StockTable.functions.js","components/Stock/StockTable.js","components/Sales/SalesTable.functions.js","components/Sales/SalesTable.js","components/common/BrandsReport/BrandsReport.functions.js","components/common/BrandsReport/BrandsReport.js","App.js","index.js"],"names":["dateFormat","productGroups","girls","boys","productNamesToFolders","sizes","brands","getSize","name","match","defineProductsBySex","sex","createDefaultDataSource","initial","products","sizesInitialValues","reduce","acc","size","map","product","idx","key","NB","total","totalSellSum","additionalData","sellSum","defineRenderValue","tableType","title","row","value","indexOf","toFixed","createColumns","titles","res","dataIndex","render","props","style","background","parseInt","children","unshift","width","stockTitles","sellColumns","stockColumns","brandsReportColumns","folderLinks","unisex","axios","defaults","headers","post","instance","create","baseURL","fetchStock","options","a","folderName","inTransit","stockMode","folderFilter","link","result","data","fetchSales","counterparty","momentFrom","momentTo","moment","Date","format","counterpartyFilter","fetchCounterparty","filterByBrand","brand","filter","calculateStock","stockData","depth","createDefaultStock","forEach","good","item","folder","stock","StockTable","fetchFunc","useState","dataSource","setDataSource","isLoading","setIsLoading","setInTransit","setBrand","useParams","menu","theme","selectedKeys","Item","onClick","updateDataSource","newDataSource","find","el","totalW","totalD","useEffect","overlay","placement","onChange","prev","columns","columnstock","pagination","bordered","loading","mapSexToSymbol","filterBySex","str","re","checkSex","assortment","updateSalesData","productNames","filterByProductName","productFolder","findFolderByProductName","sellQuantity","Number","currentSellSum","formattedSellSum","countProductFolderSellSumBySize","Object","keys","RangePicker","DatePicker","SalesTable","counterparties","setCounterparty","counterpartyMenu","currentCounterparty","meta","href","moments","_d","createBrandsDefaultDataSource","brandItems","shift","sum","profit","BrandsReport","undefined","findIndex","scroll","x","SubMenu","Menu","App","state","current","handleClick","e","setState","then","this","mode","to","exact","path","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b946648d.chunk.js","sourcesContent":["export const dateFormat = 'YYYY-MM-DD HH:mm:ss';\n\nexport const productGroups = {\n  girls:[\n    \"Аксессуары\",\n    \"Боди (длинный рукав)\",\n    \"Боди (короткий рукав)\",\n    \"Кофты\",\n    \"Наборы\",\n    \"Песочник\",\n    \"Пижамы\",\n    \"Платья\",\n    \"Регланы\",\n    \"Футболки\",\n    \"Человечки\",\n    \"Шорты\",\n    \"Штаны\",\n  ],\n  boys:[\n    \"Аксессуары\",\n    \"Боди (длинный рукав)\",\n    \"Боди (короткий рукав)\",\n    \"Кофты\",\n    \"Наборы\",\n    \"Песочник\",\n    \"Пижамы\",\n    \"Регланы\",\n    \"Футболки\",\n    \"Человечки\",\n    \"Шорты\",\n    \"Штаны\",\n    ]\n}\n        \n\n\nexport const productNamesToFolders = {\n    \"ДР\":\"Боди (длинный рукав)\",\n    \"КР\":\"Боди (короткий рукав)\",\n    \"Кофт\":\"Кофты\",\n    \"Набор\":\"Наборы\",\n    \"Песочник\":\"Песочник\",\n    \"Пижам\":\"Пижамы\",\n    \"Плать\":\"Платья\",\n    \"Реглан\":\"Регланы\",\n    \"Футболк\":\"Футболки\",\n    \"Человеч\":\"Человечки\",\n    \"Шорты\":\"Шорты\",\n    \"Штаны\": \"Штаны\",\n    \"Лосины\":\"Штаны\",\n    \"Костюм\":\"Наборы\"\n}\nexport const sizes = [\n\"NB\",\n\"0-3\",\n\"1-2\",\n\"2-4\",\n\"3-6\",\n\"4-6\",\n\"6-9\",\n\"9-12\",\n\"12-18\",\n\"18-24\",\n\"24-36\",\n]\n\nexport const brands = [\n  \"all\",\n  \"bi baby\",\n  \"bimini\",\n  \"biorganic\",\n  \"Disney baby\",\n  \"DreamKid\",\n  \"Dunnes\",\n  \"H&M\",\n  \"Little Angel\",\n  \"George\",\n  \"little life\",\n  \"Marks & Spencer\",\n  \"Matalan\",\n  \"Next\",\n  \"Tasco\",\n  \"KEHA\",\n  \"Мамине чудо\"\n];\n\n","import { productGroups, sizes } from \"../data\"\n\nexport function getSize(name){\n  const re = /([0-9]+)-([0-9]+)|NB/g;\n  return name.match(re)[0];\n}\n\nexport function defineProductsBySex(sex,productGroups){\n  return sex === \"girls\" || sex === \"common\" ? productGroups['girls'] : productGroups['boys']\n}\n\nexport function createDefaultDataSource(sex,initial=\"\"){\n  const products = defineProductsBySex(sex, productGroups)\n  const sizesInitialValues = sizes.reduce((acc,size)=>{\n    return {...acc,[size]:initial}\n  },{})\n  return products.map((product,idx)=>{\n  \n    return {\n      key: idx,\n      name: product,\n      NB: initial,\n      ...sizesInitialValues,\n      total: initial,\n      totalSellSum: initial,\n      additionalData: {\n        sellSum: {},\n      },\n    };\n  })\n}\n\nfunction defineRenderValue(tableType,title, row,value){\n  return tableType === \"sales\" && (sizes.indexOf(title)) !== -1 ? \n  value &&`${value} (${((row.additionalData.sellSum[title])*100/row.totalSellSum).toFixed(2)}%)` \n  : value\n}\nexport function createColumns(titles,tableType){\n    const res = titles.map((title,idx)=>{\n    \n      return {\n        title: title,\n        dataIndex: title,\n        key: idx,\n        render(value, row) {\n          const background = title === \"total\" ? \"white\" : parseInt(value) > 0 ? \"#C7E78F\":\"#e6948e\"\n         \n          return {\n            props: {\n              style: { background },\n            },\n            children: (\n              <div>{defineRenderValue(tableType, title, row, value)} </div>\n            ),\n          };\n        }\n      \n      };\n    })\n    res.unshift(  {\n      title: 'Название',\n      dataIndex: 'name',\n      key: 'name',\n      width:200\n    })\n    return res;\n  }\n  \nconst stockTitles = [...sizes,'total']\nconst sellTitles = [...sizes,'total',\"totalSellSum\"]\nconst brandsReportTitles=['sum','profit']\n\nexport const sellColumns = createColumns(sellTitles,\"sales\")\nexport const stockColumns = createColumns(stockTitles, \"stock\")\nexport const brandsReportColumns = createColumns(brandsReportTitles,\"brandsReport\")\n","import axios from \"axios\"\nimport moment from 'moment';\nimport { dateFormat } from \"../data\";\n\n\nconst folderLinks = {\n  girls:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/c9ac503e-1d16-11eb-0a80-050d002dcd9a\",\n  boys:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/00cfa023-1d16-11eb-0a80-050d002dade8\",\n  unisex:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/73475072-28e9-11eb-0a80-029000103030\"\n}\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\nconst instance = axios.create({baseURL:\"https://kapri-server.herokuapp.com\"})\n\nexport const fetchStock = async (options) => {\n  const { folderName, inTransit } = options;\n  const stockMode = inTransit ? \"all\" : \"positiveOnly\";\n  const folderFilter = folderName === 'common' ?  \"\" : `&filter=productFolder=${folderLinks[folderName]}`\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/stock/all?groupBy=consignment&filter=stockMode=${stockMode}&filter=inTransitOnly=${inTransit}` + folderFilter\n\n  const result = await instance.post(\"/\", { link });\n    return result.data;\n}\n\nexport const fetchSales = async (\n  counterparty,\n  momentFrom = \"2020-11-01 00:00:00\",\n  momentTo = moment(new Date()).format(dateFormat),\n) => {\n  const counterpartyFilter = !!counterparty ?`&filter=counterparty=${counterparty}` : \"\"\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/profit/byvariant?momentFrom=${momentFrom}&momentTo=${momentTo}` + counterpartyFilter\n\n  const result = await instance.post(\n    '/',{link},\n   \n  );\n  return result.data\n};\n\nexport const fetchCounterparty = async () => {\n  const link = \"https://online.moysklad.ru/api/remap/1.2/report/profit/bycounterparty\"\n  const result = await instance.post(\"/\", { link });\n  return result.data\n}\n\n","import { productGroups, sizes } from \"../../data\"\nimport { defineProductsBySex, getSize } from \"../../utils/utils\"\n\nfunction createDefaultStock(sex){\n    const products = defineProductsBySex(sex,productGroups)\n    return products.map((product)=>{\n      return    {\n        name: product,\n        sizes: sizes.reduce((acc,size)=>{\n          return{...acc,[size]:{ width: 0, depth: 0,inTransit:0,}}\n        },{})\n      }\n    })\n  }\n\nexport const filterByBrand = (products, brand) => {\n    return products.filter((product) => {\n       return product.name.indexOf(brand) !== -1;\n     });\n   }\n   \nexport function calculateStock(products, sex, inTransit) {\n  const stockData = createDefaultStock(sex);\n  products.forEach((good) => {\n    const size = getSize(good.name);\n    stockData.forEach((item) => {\n      if (good.folder.name === item.name && !!item.sizes[size]) {\n        item.sizes[size].width += 1;\n        item.sizes[size].depth += inTransit ? good.inTransit : good.stock;\n      }\n    });\n  });\n  return stockData;\n}\n   ","import React,{useEffect,useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport { Table} from 'antd';\nimport { brands} from '../../data'\nimport { createDefaultDataSource,  } from '../../utils/utils'\nimport {stockColumns} from '../../utils/utils'\nimport { fetchStock } from '../../core/api';\nimport { Checkbox } from 'antd';\nimport { Menu, Dropdown, Button } from 'antd';\nimport { calculateStock, filterByBrand } from './StockTable.functions';\n\n\n\nexport const StockTable = ({fetchFunc}) => {\n  const [dataSource, setDataSource] =useState(null)\n  const [isLoading,setIsLoading] = useState(false)\n  const [inTransit, setInTransit] =  useState(false)\n  const [brand,setBrand] = useState(\"all\")\n  const {sex} = useParams()\n  \n  const menu = \n (\n  <Menu theme=\"dark\" selectedKeys={[brand]}>\n    {brands.map(brand=>{\n      return   (\n      <Menu.Item  onClick ={()=>{setBrand(brand)}} key={brand}>\n        {brand}   \n    </Menu.Item>)\n    })}\n  \n  </Menu>\n);\n\n  const updateDataSource = async () => {\n    const newDataSource = createDefaultDataSource(sex);\n    setIsLoading(true);\n    const options = { folderName: sex, inTransit };\n    let products = await fetchStock(options);\n\n    if (brand !== \"all\") {\n      products = filterByBrand(products,brand)\n    }\n    const stockData = calculateStock(products,sex, inTransit)\n   \n    newDataSource.forEach((item) => {\n      const res = stockData.find((el) => item.name === el.name);\n      let totalW = 0;\n      let totalD = 0;\n\n      for (let size in res.sizes) {\n        totalW += res.sizes[size].width;\n        totalD += res.sizes[size].depth;\n        item[size] = `${res.sizes[size].depth} (${res.sizes[size].width}) `;\n      }\n      item.total = `${totalD} (${totalW})`;\n    });\n\n    setDataSource(newDataSource);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    updateDataSource(fetchFunc);\n  }, [sex, inTransit, brand]);\n\n  return (\n    <>\n      <Dropdown  overlay={menu} placement=\"bottomCenter\">\n        <Button>Бренд</Button>\n      </Dropdown>\n      <Checkbox style={{\"marginLeft\":\"30px\"}}onChange={() => setInTransit((prev) => !prev)}>\n        In transit\n      </Checkbox>\n      <Table\n        dataSource={dataSource}\n        columns={stockColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\n\n","import { productNamesToFolders } from \"../../data\";\nimport { createDefaultDataSource, getSize } from \"../../utils/utils\";\n\nconst mapSexToSymbol = {\n    boys: \"М\",\n    girls: \"Д\",\n    unisex: \"У\",\n  };\n\n\nexport function checkSex(str,sex){\n    const re = `^[${mapSexToSymbol[sex]}]{1}`;\n    const res = str.match(re);\n    if( res) {\n        return mapSexToSymbol[sex] === res[0];\n    }\n}\n\nexport function filterBySex(products, sex){\n    return products.filter((product) => {\n        return checkSex(product.assortment.name, sex);\n    })\n}\n\nexport function filterByProductName(products,name){\n    return products.filter(\n      (product) => product.assortment.name.indexOf(name) !== -1\n    );\n}\n\nexport function findFolderByProductName(dataSource,name){\n    return  dataSource.find((productFolder) => {\n        return productFolder.name === productNamesToFolders[name];\n      });\n}\nexport function countProductFolderSellSumBySize(productFolder,product, size){\n  const currentSellSum = productFolder[\"additionalData\"].sellSum[size]\n  const formattedSellSum = (product.sellSum / 100).toFixed(0)\n  if (currentSellSum) {\n    productFolder[\"additionalData\"].sellSum[size] += Number(formattedSellSum);\n  } else {\n    productFolder[\"additionalData\"].sellSum[size] = Number(formattedSellSum);\n  }\n}\nexport function updateSalesData(productNames,products,sex){\n  const dataSource = createDefaultDataSource(sex, 0);\n\n  productNames.forEach((name) => {\n    filterByProductName(products, name).forEach((product) => {\n      const productFolder = findFolderByProductName(dataSource, name);\n      const size = getSize(product.assortment.name);\n      productFolder[size] += product.sellQuantity;\n      productFolder[\"total\"] += product.sellQuantity;\n      productFolder[\"totalSellSum\"] += Number((product.sellSum / 100).toFixed(0));\n      countProductFolderSellSumBySize(productFolder, product, size)      \n    });\n  });\n  return dataSource;\n}","import React,{useEffect,  useState} from 'react'\nimport { fetchSales } from '../../core/api'\nimport {productNamesToFolders,dateFormat} from '../../data'\nimport { sellColumns, } from '../../utils/utils'\nimport { DatePicker, Dropdown, Table, Button, Menu } from \"antd\";\nimport moment from 'moment';\nimport { useParams } from 'react-router-dom'\nimport { filterBySex, updateSalesData } from './SalesTable.functions';\n\nconst productNames = Object.keys(productNamesToFolders);\n\nconst { RangePicker } = DatePicker;\n\nexport const SalesTable = ({counterparties}) => {\n  const { sex } = useParams();\n  const [dataSource, setDataSource] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [counterparty, setCounterparty] = useState(null);\n\n  const counterpartyMenu = counterparties && (\n    <Menu theme=\"dark\" selectedKeys={[counterparty ? counterparty.name :\"All\"]}>\n      <Menu.Item\n        onClick={() => {\n          setCounterparty(null);\n        }}\n        key={\"All\"}\n      >\n        {\"All\"}\n      </Menu.Item>\n      {counterparties.map((item) => {\n        return (\n          <Menu.Item\n            onClick={() => {\n              setCounterparty(item.counterparty);\n            }}\n            key={item.counterparty.name}\n          >\n            {item.counterparty.name}\n          </Menu.Item>\n        );\n      })}\n    </Menu>\n  );\n\n  const updateDataSource = async ( counterparty,momentFrom, momentTo,) => {\n    setIsLoading(true);\n    let products = await fetchSales(counterparty,momentFrom, momentTo);\n     products = sex === \"common\" ? products : filterBySex(products, sex);\n    setDataSource(updateSalesData(productNames, products, sex));\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    let currentCounterparty = !!counterparty ? counterparty.meta.href :counterparty\n    updateDataSource(currentCounterparty);\n  }, [sex,counterparty]);\n  return (\n    <>\n        <RangePicker\n          onChange={(moments) => {\n            updateDataSource(counterparty,\n              moment(moments[0]._d).format(dateFormat),\n              moment(moments[1]._d).format(dateFormat)\n            );\n          }}\n          format={dateFormat}\n          size=\"large\"\n        />\n        <Dropdown overlay={counterpartyMenu}  placement=\"bottomCenter\">\n          <Button>{counterparty ? counterparty.name : \"Контрагент\"}</Button>\n        </Dropdown>\n      <Table\n        dataSource={dataSource}\n        columns={sellColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\n\n\n","import { brands } from \"../../../data\";\n\nexport function createBrandsDefaultDataSource(){\n    const brandItems = [...brands]\n    brandItems.shift()\n    return brandItems.map((brand,idx)=>{\n        \n  \n        return {\n          key: idx,\n          name: brand,\n          sum:0,\n          profit:0\n        };\n      })\n  }\n\n  export function getBrand(name){\n    const re = /\\(([a-zA-Zа-яА-я\\s&]{0,})/gi\n    return name.match(re)\n  }\n\n\n  export const filterByBrand = (products, brand) => {\n    return products.filter((product) => {\n       return product.assortment.name.indexOf(brand) !== -1;\n     });\n   }\n","import React,{useEffect, useState} from 'react'\nimport { useParams } from 'react-router-dom'\nimport { fetchSales } from '../../../core/api';\nimport { brandsReportColumns } from '../../../utils/utils';\nimport { createBrandsDefaultDataSource,filterByBrand } from './BrandsReport.functions';\n\nimport { DatePicker, Table } from 'antd';\nimport moment from 'moment';\n\nimport { filterBySex } from '../../Sales/SalesTable.functions';\nimport { brands, dateFormat } from '../../../data';\nconst { RangePicker } = DatePicker;\n\n\nexport const BrandsReport = () => {\n    const { sex } = useParams();\n    const [dataSource, setDataSource] = useState(createBrandsDefaultDataSource());\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    const updateDataSource = async (momentFrom, momentTo) => {\n        setIsLoading(true);\n        let data = await fetchSales(undefined,momentFrom,momentTo);\n         data = sex === \"common\" ? data : filterBySex(data, sex);\n\n         const dataSource = createBrandsDefaultDataSource();\n         brands.forEach((brand)=> {\n             const products = filterByBrand(data, brand)\n             products.forEach((product)=>{\n                 const idx = dataSource.findIndex((item)=> item.name === brand)\n                 \n                 if(idx > -1){  dataSource[idx] = {\n                     ...dataSource[idx],\n                     sum: dataSource[idx].sum += +(product.sellSum /100).toFixed(0),\n                     profit:dataSource[idx].profit += +(product.profit /100).toFixed(0)\n                 }}\n               \n             })\n\n         })\n         setDataSource(dataSource)\n        setIsLoading(false);\n      };\n    useEffect(()=>{\n    updateDataSource()\n    },[sex])\n\n    return (\n        <>\n        <RangePicker\n          onChange={(moments) => {\n            updateDataSource(\n              moment(moments[0]._d).format(dateFormat),\n              moment(moments[1]._d).format(dateFormat)\n            );\n          }}\n          format={dateFormat}\n          size=\"large\"\n        />\n        <Table\n        style={{width:\"50vw\"}}\n        dataSource={dataSource}\n        columns={brandsReportColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n        size=\"middle\"\n        scroll={{ x: 'max-content' }}\n        \n        \n      />\n      </>\n    )\n}\n","import React from 'react'\nimport {Route,NavLink} from 'react-router-dom'\n\n\n\nimport { Menu } from 'antd';\nimport { StockTable } from './components/Stock/StockTable';\nimport { SalesTable } from './components/Sales/SalesTable';\nimport { fetchCounterparty } from './core/api';\nimport { BrandsReport } from './components/common/BrandsReport/BrandsReport';\n\nconst { SubMenu } = Menu;\n\nclass App extends React.Component {\n  state = {\n    current: null,\n    counterparties:null\n  };\n  componentDidMount(){\n    fetchCounterparty().then((counterparties) => {\n      this.setState({counterparties})\n    });\n  }\n\n  handleClick = e => {\n    this.setState({ current: e.key });\n  };\n\n  render() {\n    const { current } = this.state;\n    return (\n      <>\n        \n          <Menu\n            onClick={this.handleClick}\n            selectedKeys={[current]}\n            mode=\"horizontal\"\n            theme=\"dark\"\n          >\n            <SubMenu key=\"boys\" title=\"Мальчики\">\n              <Menu.Item key=\"boysStock\">\n                <NavLink to=\"/stock/boys\">Oстатки </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"boysSales\">\n                <NavLink to=\"/sales/boys\">Продажи </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"boysBrandReport\">\n                <NavLink to=\"/brandsReport/boys\">Отчет по брендам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n\n            <SubMenu key=\"girls\" title=\"Девочки\">\n              <Menu.Item key=\"girlsStock\">\n                <NavLink to=\"/stock/girls\">Oстатки </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"girlsSales\">\n                <NavLink to=\"/sales/girls\">Продажи </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"girlsBrandReport\">\n                <NavLink to=\"/brandsReport/girls\">Отчет по брендам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"unisex\" title=\"Унисекс\">\n              <Menu.Item key=\"unisexStock\">\n                <NavLink to=\"/stock/unisex\">Oстатки</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"unisexSales\">\n                <NavLink to=\"/sales/unisex\">Продажи</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"unisexBrandReport\">\n                <NavLink to=\"/brandsReport/unisex\">Отчет по брендам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"common\" title=\"Общее\">\n              <Menu.Item key=\"commonStock\">\n                <NavLink to=\"/stock/common\">Oстатки</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"commonSales\">\n                <NavLink to=\"/sales/common\">Продажи</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"commonBrandReport\">\n                <NavLink to=\"/brandsReport/common\">Отчет по брендам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n          </Menu>\n        \n        <Route exact path=\"/stock/:sex\" render={() => <StockTable />} />\n        <Route path=\"/sales/:sex\" render={() => <SalesTable counterparties={this.state.counterparties}/>} />\n        <Route path=\"/brandsReport/:sex\" render={() => <BrandsReport/>} />\n      </>\n    );\n  }\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <HashRouter>\n      <App />\n   </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}