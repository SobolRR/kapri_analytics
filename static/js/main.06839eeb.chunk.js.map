{"version":3,"sources":["data.js","utils/utils.js","core/api.js","components/Stock/StockTable.functions.js","components/Stock/StockTable.js","components/Sales/SalesTable.functions.js","components/Sales/SalesTable.js","components/Report/Report.functions.js","components/Report/Report.js","components/CommonReport/CommonReport.functions.js","components/CounterpartiesReport/CounterpartiesReport.jsx","components/CommonReport/CommonReport.js","App.js","index.js"],"names":["dateFormat","productGroups","girls","boys","productNamesToFolders","foldersToProductNames","sizes","brands","getSize","name","match","defineProductsBySex","sex","defineRenderValue","tableType","title","row","value","indexOf","showSellSum","additionalData","sellSum","totalSellSum","toFixed","alphabetSortingFunc","a","b","nameA","toLowerCase","nameB","sortFuntions","brandsReport","parseFloat","sales","parseInt","createColumns","titles","res","map","idx","sorting","sorter","dataIndex","key","render","props","style","background","defineBackground","children","unshift","width","stockTitles","sellColumns","stockColumns","brandsReportColumns","folderLinks","unisex","axios","defaults","headers","post","instance","create","baseURL","fetchStock","options","folderName","inTransit","stockMode","folderFilter","link","result","data","fetchSales","counterparty","momentFrom","momentTo","moment","Date","format","counterpartyFilter","fetchCounterparty","filterByBrand","products","brand","filter","product","calculateStock","stockData","reduce","acc","size","depth","createDefaultStock","forEach","good","item","folder","stock","createDefaultDataSource","initial","sizesInitialValues","NB","total","StockTable","fetchFunc","currentBrand","useState","dataSource","setDataSource","isLoading","setIsLoading","setInTransit","useParams","updateDataSource","newDataSource","find","el","totalW","totalD","useEffect","onChange","prev","marginTop","columns","columnstock","pagination","bordered","loading","mapSexToSymbol","filterBySex","str","re","checkSex","assortment","filterByProductName","names","filterFunc","Array","length","push","fillDataSource","productNames","dataSourceCopy","productFolder","findFolderByProductName","sellQuantity","Number","currentSellSum","formattedSellSum","countProductFolderSellSumBySize","Object","keys","SalesTable","counterparties","setCounterparty","setShowSellSum","counterpartyMenu","theme","selectedKeys","Item","onClick","salesData","currentCounterparty","meta","href","then","overlay","placement","checked","createBrandsDefaultDataSource","items","sum","profit","sellCostSum","profitability","formatDataSource","entitiesForReport","slice","Report","reportBy","undefined","findIndex","mapSymbolToGender","М","Д","У","categories","commonReportColumns","fixed","characteristics","counterpartiesNames","values","CounterpartiesReport","some","profitabilityObj","sellCostSumObj","profitObj","CommonReport","gender","categoryName","RangePicker","DatePicker","SubMenu","Menu","App","state","current","handleClick","e","setState","handleMomentFromChange","handleMomentToChange","handleBrandChange","console","log","this","mode","to","path","dropDownOptios","moments","_d","exact","React","Component","selectedItem","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.06839eeb.chunk.js","sourcesContent":["export const dateFormat = 'YYYY-MM-DD HH:mm:ss';\n\nexport const productGroups = {\n  girls:[\n    \"Аксессуары\",\n    \"Боди (длинный рукав)\",\n    \"Боди (короткий рукав)\",\n    \"Кофты\",\n    \"Наборы\",\n    \"Носочки\",\n    \"Песочник\",\n     \"Колготки\",\n     \"Ползунки\",\n    \"Пижамы\",\n    \"Платья\",\n    \"Регланы\",\n    \"Футболки\",\n    \"Человечки\",\n    \"Шорты\",\n    \"Штаны\",\n  ],\n  boys:[\n    \"Аксессуары\",\n    \"Боди (длинный рукав)\",\n    \"Боди (короткий рукав)\",\n    \"Кофты\",\n    \"Наборы\",\n    \"Носочки\",\n    \"Песочник\",\n    \"Пижамы\",\n    \"Ползунки\",\n    \"Регланы\",\n    \"Футболки\",\n    \"Человечки\",\n    \"Шорты\",\n    \"Штаны\",\n    ]\n}\n        \n\n\nexport const productNamesToFolders = {\n    \"ДР\":\"Боди (длинный рукав)\",\n    \"КР\":\"Боди (короткий рукав)\",\n    \"Кофт\":\"Кофты\",\n    \"Набор\":\"Наборы\",\n    \"Носочки\":\"Носочки\",\n    \"Ползунк\":\"Ползунки\",\n    \"Колгот\":\"Колготки\",\n    \"Песочник\":\"Песочник\",\n    \"Пижам\":\"Пижамы\",\n    \"Плать\":\"Платья\",\n    \"Реглан\":\"Регланы\",\n    \"Футболк\":\"Футболки\",\n    \"Человеч\":\"Человечки\",\n    \"Шорты\":\"Шорты\",\n    \"Штаны\": \"Штаны\",\n    \"Лосины\":\"Штаны\",\n    \"Костюм\":\"Наборы\"\n}\nexport const foldersToProductNames = {\n  \"Боди (длинный рукав)\":\"ДР\",\n  \"Боди (короткий рукав)\":\"КР\",\n  \"Кофты\":\"Кофт\",\n  \"Наборы\":[\"Набор\",\"Костюм\"],\n \"Носочки\": \"Носочки\",\n  \"Песочник\":\"Песочник\",\n \"Пижамы\": \"Пижам\",\n  \"Платья\":\"Плать\",\n  \"Регланы\":\"Реглан\",\n  \"Футболки\":\"Футболк\",\n \"Человечки\": \"Человеч\",\n  \"Шорты\":\"Шорты\",\n  \"Штаны\":[\"Штаны\",\"Лосины\"],\n  \"Ползунки\":\"Ползунк\",\n    \"Колготки\":\"Колгот\"\n}\n\nexport const sizes = [\n\"NB\",\n\"0-3\",\n\"1-2\",\n\"2-4\",\n\"3-6\",\n\"4-6\",\n\"6-9\",\n\"9-12\",\n\"12-18\",\n\"18-24\",\n\"24-36\",\n]\n\nexport const brands = [\n  \"all\",\n  \"bi baby\",\n  \"bimini\",\n  \"biorganic\",\n  \"Caramell\",\n  \"Disney baby\",\n  \"DreamKid\",\n  \"Dunnes\",\n  \"H&M\",\n  \"Little Angel\",\n  \"George\",\n  \"little life\",\n  \"Marks & Spencer\",\n  \"Matalan\",\n  \"Next\",\n  \"Tesco\",\n  \"KEHA\",\n  \"Мамине чудо\"\n];\n\n","import { sizes } from \"../data\"\n\nexport function getSize(name){\n  const re = /([0-9]+)-([0-9]+)|NB/g;\n  return name.match(re)[0];\n}\n\nexport function defineProductsBySex(sex,productGroups){\n  return sex === \"girls\" || sex === \"common\" ? productGroups['girls'] : productGroups['boys']\n}\n\n\n\nfunction defineRenderValue(tableType,title, row,value){\n  switch(tableType){\n    case \"sales\":\n      return (sizes.indexOf(title)) !== -1 ?\n      value &&`${row.showSellSum ?  row.additionalData.sellSum[title] : value} (${((row.additionalData.sellSum[title])*100/row.totalSellSum).toFixed(2)}%)` \n      : value\n      default:\n        return value\n  } \n\n }\n \nconst alphabetSortingFunc =function(a, b){\n  var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase()\n  if (nameA < nameB) \n    return -1\n  if (nameA > nameB)\n    return 1\n  return 0 \n  }\n\nfunction defineBackground(title,value){\n  return title === \"total\" ? \"white\" : parseInt(value) > 0 ? \"#C7E78F\":\"#e6948e\"\n}\n\nconst sortFuntions = {\n  brandsReport: (title) => (a, b) =>  parseFloat(a[title]) - parseFloat(b[title]),\n  sales: (title) => (a, b) => parseInt(a[title]) - parseInt(b[title]),\n  \n};\n\nexport function createColumns(titles,tableType){\n\n    const res = titles.map((title,idx)=>{\n      const sorting =\n        !!sortFuntions[tableType] && sizes.indexOf(title) === -1\n          ? { sorter: sortFuntions[tableType](title) }\n          : {};\n      return {\n        title: title,\n        dataIndex: title,\n        key: idx,\n        ...sorting,\n        render(value, row) {\n          const background = defineBackground(title, value);\n          return {\n            props: {\n              style: { background },\n            },\n            children: (\n              <div>{defineRenderValue(tableType, title, row, value)} </div>\n            ),\n          };\n        },\n      };\n    })\n    res.unshift(  {\n      title: 'Название',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: alphabetSortingFunc,\n      width:200\n    })\n    \n    return res\n  }\n  \nconst stockTitles = [...sizes,'total']\nconst sellTitles = [...sizes,'total',\"totalSellSum\"]\nconst brandsReportTitles=['sum','profit',\"profitability\"]\n\nexport const sellColumns = createColumns(sellTitles,\"sales\")\nexport const stockColumns = createColumns(stockTitles, \"stock\")\nexport const brandsReportColumns = createColumns(brandsReportTitles, \"brandsReport\")\nexport const counterpartiesReportColumns = createColumns([\"salesCount\", \"profit\", \"salesAvgCheck\", \"sellSum\",\"profitability\"],\"counterpartiesReport\")\n\n\n\n\n\n\n","import axios from \"axios\"\nimport moment from 'moment';\nimport { dateFormat } from \"../data\";\n\n\nconst folderLinks = {\n  girls:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/c9ac503e-1d16-11eb-0a80-050d002dcd9a\",\n  boys:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/00cfa023-1d16-11eb-0a80-050d002dade8\",\n  unisex:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/73475072-28e9-11eb-0a80-029000103030\"\n}\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\nconst instance = axios.create({baseURL:\"https://kapri-server.herokuapp.com\"})\n\nexport const fetchStock = async (options) => {\n  const { folderName, inTransit } = options;\n  const stockMode = inTransit ? \"all\" : \"positiveOnly\";\n  const folderFilter = folderName === 'common' ?  \"\" : `&filter=productFolder=${folderLinks[folderName]}`\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/stock/all?groupBy=consignment&filter=stockMode=${stockMode}&filter=inTransitOnly=${inTransit}` + folderFilter\n\n  const result = await instance.post(\"/\", { link });\n    return result.data;\n}\n\nexport const fetchSales = async (\n  counterparty,\n  momentFrom = \"2021-02-15 10:00:00\",\n  momentTo = moment(new Date()).format(dateFormat),\n) => {\n  const counterpartyFilter = !!counterparty ?`&filter=counterparty=${counterparty}` : \"\"\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/profit/byvariant?momentFrom=${momentFrom}&momentTo=${momentTo}` + counterpartyFilter\n\n  const result = await instance.post(\n    '/',{link},\n   \n  );\n  return result.data\n};\n\nexport const fetchCounterparty = async () => {\n  const link = \"https://online.moysklad.ru/api/remap/1.2/report/profit/bycounterparty\"\n  const result = await instance.post(\"/\", { link });\n  return result.data\n}\n\n","import { productGroups, sizes } from \"../../data\"\nimport { defineProductsBySex, getSize } from \"../../utils/utils\"\n\nfunction createDefaultStock(sex){\n    const products = defineProductsBySex(sex,productGroups)\n    return products.map((product)=>{\n      return    {\n        name: product,\n        sizes: sizes.reduce((acc,size)=>{\n          return{...acc,[size]:{ width: 0, depth: 0,inTransit:0,}}\n        },{})\n      }\n    })\n  }\n\nexport const filterByBrand = (products, brand) => {\n    return products.filter((product) => {\n       return product.name.indexOf(brand) !== -1;\n     });\n   }\n   \nexport function calculateStock(products, sex, inTransit) {\n  const stockData = createDefaultStock(sex);\n  products.forEach((good) => {\n    const size = getSize(good.name);\n    stockData.forEach((item) => {\n      if (good.folder.name === item.name && !!item.sizes[size]) {\n        item.sizes[size].width += 1;\n        item.sizes[size].depth += inTransit ? good.inTransit : good.stock;\n      }\n    });\n  });\n  return stockData;\n}\n   \nexport function createDefaultDataSource(sex,initial=\"\"){\n  const products = defineProductsBySex(sex, productGroups)\n  const sizesInitialValues = sizes.reduce((acc,size)=>{\n    return {...acc,[size]:initial}\n  },{})\n  return products.map((product,idx)=>{\n  \n    return {\n      key: idx,\n      name: product,\n      NB: initial,\n      ...sizesInitialValues,\n      total: initial,\n      \n     \n    };\n  })\n}","import React,{useEffect,useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport { Table} from 'antd';\nimport {stockColumns} from '../../utils/utils'\nimport { fetchStock } from '../../core/api';\nimport { Checkbox } from 'antd';\nimport { calculateStock, createDefaultDataSource, filterByBrand } from './StockTable.functions';\n\n\n\nexport const StockTable = ({fetchFunc,currentBrand}) => {\n  \n  const [dataSource, setDataSource] =useState(null)\n  const [isLoading,setIsLoading] = useState(false)\n  const [inTransit, setInTransit] =  useState(false)\n  const {sex} = useParams()\n  \n\n  const updateDataSource = async () => {\n    const newDataSource = createDefaultDataSource(sex);\n    setIsLoading(true);\n    const options = { folderName: sex, inTransit };\n    let products = await fetchStock(options);\n\n    if (currentBrand !== \"all\") {\n      products = filterByBrand(products,currentBrand)\n    }\n    const stockData = calculateStock(products,sex, inTransit)\n   \n    newDataSource.forEach((item) => {\n      const res = stockData.find((el) => item.name === el.name);\n      let totalW = 0;\n      let totalD = 0;\n\n      for (let size in res.sizes) {\n        totalW += res.sizes[size].width;\n        totalD += res.sizes[size].depth;\n        item[size] = `${res.sizes[size].depth} (${res.sizes[size].width}) `;\n      }\n      item.total = `${totalD} (${totalW})`;\n    });\n\n    setDataSource(newDataSource);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    updateDataSource(fetchFunc);\n  }, [sex, inTransit, currentBrand]);\n\n  return (\n    <>\n      <Checkbox style={{\"marginLeft\":\"30px\"}} onChange={() => setInTransit((prev) => !prev)}>\n        In transit\n      </Checkbox>\n      <Table\n        dataSource={dataSource}\n        style={{marginTop:\"4vh\"}}\n        columns={stockColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\n\n","import { productGroups, productNamesToFolders, sizes } from \"../../data\";\nimport { defineProductsBySex, getSize } from \"../../utils/utils\";\n\nconst mapSexToSymbol = {\n    boys: \"М\",\n    girls: \"Д\",\n    unisex: \"У\",\n  };\n\n\nexport function checkSex(str,sex){\n    const re = `^[${mapSexToSymbol[sex]}]{1}`;\n    const res = str.match(re);\n    if( res) {\n        return mapSexToSymbol[sex] === res[0];\n    }\n}\n\nexport function filterBySex(products, sex){\n  return sex === \"common\"\n    ? products\n    : products.filter((product) => checkSex(product.assortment.name, sex));\n}\n\nexport function filterByProductName(products,names){\n  let res = [];\n  const filterFunc = (name) => (product) =>\n    product.assortment.name.indexOf(name) !== -1;\n  if (names instanceof Array && names.length > 0) {\n    names.forEach((name) => {\n      res.push(...products.filter(filterFunc(name)));\n    });\n  } else {\n    res.push(...products.filter(filterFunc(names)));\n  }\n\n  return res;\n}\n\nexport function findFolderByProductName(dataSource,name){\n    return  dataSource.find((productFolder) => {\n        return productFolder.name === productNamesToFolders[name];\n      });\n}\nexport function countProductFolderSellSumBySize(productFolder,product, size){\n  const currentSellSum = productFolder[\"additionalData\"].sellSum[size]\n  const formattedSellSum = (product.sellSum / 100).toFixed(0)\n  if (currentSellSum) {\n    productFolder[\"additionalData\"].sellSum[size] += Number(formattedSellSum);\n  } else {\n    productFolder[\"additionalData\"].sellSum[size] = Number(formattedSellSum);\n  }\n}\nexport function fillDataSource(dataSource,productNames,products){\nconst dataSourceCopy = [...dataSource]\n  productNames.forEach((name) => {\n    filterByProductName(products, [name]).forEach((product) => {\n      const productFolder = findFolderByProductName(dataSourceCopy, name);\n      const size = getSize(product.assortment.name);\n      productFolder[size] += product.sellQuantity;\n      productFolder[\"total\"] += product.sellQuantity;\n      productFolder[\"sellSum\"] = +product.sellSum;\n      productFolder[\"totalSellSum\"] += Number((product.sellSum / 100).toFixed(0));\n      countProductFolderSellSumBySize(productFolder, product, size)      \n    });\n  });\n  return dataSourceCopy;\n}\n\nexport function createDefaultDataSource(sex,initial=\"\",showSellSum){\n  const products = defineProductsBySex(sex, productGroups)\n  const sizesInitialValues = sizes.reduce((acc,size)=>{\n    return {...acc,[size]:initial}\n  },{})\n  return products.map((product,idx)=>{\n  \n    return {\n      key: idx,\n      name: product,\n      NB: initial,\n      ...sizesInitialValues,\n      total: initial,\n      totalSellSum: initial,\n      additionalData: {\n        sellSum: {},\n      },\n      showSellSum\n    };\n  })\n}","import React,{useEffect,  useState} from 'react'\nimport { fetchSales } from '../../core/api'\nimport {productNamesToFolders} from '../../data'\nimport { sellColumns, } from '../../utils/utils'\nimport { Dropdown, Table, Button, Menu } from \"antd\";\nimport { useParams } from 'react-router-dom'\nimport { createDefaultDataSource, filterBySex, fillDataSource } from './SalesTable.functions';\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\n\nexport const productNames = Object.keys(productNamesToFolders);\n\n\nexport const SalesTable = ({counterparties,momentFrom,momentTo}) => {\n  const { sex } = useParams();\n  const [dataSource, setDataSource] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [counterparty, setCounterparty] = useState(null);\n  const [showSellSum, setShowSellSum] = useState(true)\n\n  const counterpartyMenu = counterparties && (\n    <Menu theme=\"dark\" selectedKeys={[counterparty ? counterparty.name :\"All\"]}>\n      <Menu.Item\n        onClick={() => {\n          setCounterparty(null);\n        }}\n        key={\"All\"}\n      >\n        {\"All\"}\n      </Menu.Item>\n      {counterparties.map((item) => {\n        return (\n          <Menu.Item\n            onClick={() => {\n              setCounterparty(item.counterparty);\n            }}\n            key={item.counterparty.name}\n          >\n            {item.counterparty.name}\n          </Menu.Item>\n        );\n      })}\n    </Menu>\n  );\n\n  const updateDataSource = (salesData) => {\n    let dataSource = createDefaultDataSource(sex, 0, showSellSum);\n    const products = filterBySex(salesData, sex);\n    dataSource = fillDataSource(dataSource, productNames, products);\n    setDataSource(dataSource)\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    let currentCounterparty = !!counterparty ? counterparty.meta.href :counterparty\n    setIsLoading(true);\n\n    fetchSales(currentCounterparty, momentFrom, momentTo).then((salesData) =>\n      updateDataSource(salesData)\n    );\n\n    \n  }, [sex,counterparty,showSellSum,momentFrom,momentTo]);\n  return (\n    <>\n        <Dropdown overlay={counterpartyMenu}  placement=\"bottomCenter\">\n          <Button>{counterparty ? counterparty.name : \"Контрагент\"}</Button>\n        </Dropdown>\n        <Checkbox checked={showSellSum} style={{\"marginLeft\":\"30px\"}}onChange={() => setShowSellSum((prev) => !prev)}>\n        SellSum\n      </Checkbox>\n      <Table\n        dataSource={dataSource}\n        columns={sellColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\n\n\n","\nexport function createBrandsDefaultDataSource(items){\n    const itemsCopy = [...items]\n    return itemsCopy.map((name,idx)=>{\n        \n        return {\n          key: idx,\n          name,\n          sum:0,\n          profit:0,\n          sellCostSum:0,\n          profitability:0\n        };\n      })\n  }\n\n\n export  const formatDataSource = (dataSource) => {\n    return dataSource.map((name) => {\n      const profitability = +((name.profit * 100) / name.sellCostSum).toFixed(\n        2\n      );\n      \n      return {\n        ...name,\n        sum: (name.sum / 100).toFixed(2),\n        profit: (name.profit / 100).toFixed(2),\n        profitability: !!profitability ? profitability + \"%\" : 0,\n      };\n    });\n  }\n\n export const fillDataSource = (dataSource, product, idx) => {\n   const data = [...dataSource];\n   if (idx > -1) {\n     data[idx] = {\n       ...data[idx],\n       sum: (data[idx].sum += +product.sellSum),\n       profit: (data[idx].profit += +product.profit),\n       sellCostSum: (data[idx].sellCostSum += +product.sellCostSum),\n     };\n   }\n   return data;\n };\n\n  export const filterByBrand = (products, brand) => {\n    const res =  products.filter((product) => {\n       return product.assortment.name.indexOf(brand) !== -1;\n     });\n     return res\n   }\n","import React,{useEffect, useState} from 'react'\nimport { useParams } from 'react-router-dom'\nimport { fetchSales } from '../../core/api';\nimport { brandsReportColumns, getSize } from '../../utils/utils';\nimport { createBrandsDefaultDataSource,fillDataSource,filterByBrand, formatDataSource } from './Report.functions';\nimport { Table } from 'antd';\nimport { filterBySex } from '../Sales/SalesTable.functions';\nimport { brands, sizes } from '../../data';\n\nconst entitiesForReport = {\n    brands:brands.slice(1),\n    sizes\n  }\nexport const Report = ({momentFrom, momentTo,currentBrand}) => {\n    const { sex } = useParams();\n    const { reportBy } = useParams();\n    const [dataSource, setDataSource] = useState(createBrandsDefaultDataSource(entitiesForReport[reportBy]));\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    const updateDataSource = async (momentFrom, momentTo) => {  \n        setIsLoading(true);\n        let data = await fetchSales(undefined,momentFrom,momentTo);\n         data = filterBySex(data, sex);\n         let dataSource = createBrandsDefaultDataSource(entitiesForReport[reportBy]);\n         if (reportBy === \"brands\") {\n           brands.forEach((currentBrand) => {\n             const products = filterByBrand(data, currentBrand);\n             products.forEach((product) => {\n               const idx = dataSource.findIndex((item) => item.name === currentBrand);\n               dataSource = fillDataSource(dataSource, product, idx);\n             });\n           });\n         \n         } else if (reportBy === \"sizes\") {\n          if (currentBrand !== \"all\") {\n            data = filterByBrand(data,currentBrand)\n          }\n           data.forEach((product) => {\n            const idx = dataSource.findIndex((item) => item.name === getSize(product.assortment.name));  \n            dataSource = fillDataSource(dataSource,product,idx)\n           })\n         }\n         setDataSource(formatDataSource(dataSource))\n        setIsLoading(false);\n      };\n    useEffect(()=>{\n    updateDataSource(momentFrom,momentTo)\n    },[sex,momentFrom,momentTo,reportBy, currentBrand])\n\n    return (\n        <>\n        <Table\n        style={{width:\"70vw\"}}\n        dataSource={dataSource}\n        columns={brandsReportColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n         />\n      </>\n    )\n}\n","import { productGroups } from \"../../data\";\n\nexport const mapSymbolToGender = {\n  М: \"boys\",\n  Д: \"girls\",\n  У: \"unisex\",\n};\n\nexport const defineGender = (str) => mapSymbolToGender[str[0]]\n\n\nexport const createDefaultDataSource = ()=>productGroups.girls.map((name,idx) => {\n    return  {\n      idx,\n        name,\n        categories: {\n          girls: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0,\n            \n          },\n          boys: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0\n          },\n          unisex: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0\n          },\n          total: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0\n          }\n        },\n      }\n  }) \n\n  export const commonReportColumns = [\n    {\n      title: \"Категория товаров\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: 100,\n      fixed: \"left\",\n    },\n    {\n      title: \"Girls\",\n      children: [\n        {\n          title: \"Количество\",\n          dataIndex: [\"categories\",\"girls\",\"sellQuantity\"],\n          key: \"sellQuantity\",\n        },\n        {\n          title: \"Сумма, грн\",\n          dataIndex: [\"categories\",\"girls\",\"sellSum\"],\n          key: \"sellSum\",\n        },\n        {\n          title: \"Прибыль, грн\",\n          dataIndex: [\"categories\",\"girls\",\"profit\"],\n          key: \"profit\",\n        },\n        {\n          title: \"Рентабельность, %\",\n          dataIndex: [\"categories\",\"girls\",\"profitability\"],\n          key: \"profitability\",\n        },\n      ],\n    },\n    {\n      title: \"Boys\",\n  \n      children: [\n        {\n          title: \"Количество\",\n          dataIndex: [\"categories\",\"boys\",\"sellQuantity\"],\n          key: \"sellQuantity\",\n          \n        },\n        {\n          title: \"Сумма, грн\",\n          dataIndex: [\"categories\",\"boys\",\"sellSum\"],\n          key: \"sellSum\",\n          \n        },\n        {\n          title: \"Прибыль, грн\",\n          dataIndex: [\"categories\",\"boys\",\"profit\"],\n          key: \"profit\",\n          \n        },\n        {\n          title: \"Рентабельность, %\",\n          dataIndex: [\"categories\",\"boys\",\"profitability\"],\n          key: \"profitability\",\n          \n        },\n      ],\n    },\n    {\n      title: \"Unisex\",\n  \n      children: [\n        {\n          title: \"Количество\",\n          dataIndex: [\"categories\",\"unisex\",\"sellQuantity\"],\n          key: \"sellQuantity\",\n          \n        },\n        {\n          title: \"Сумма, грн\",\n          dataIndex: [\"categories\",\"unisex\",\"sellSum\"],\n          key: \"sellSum\",\n          \n        },\n        {\n          title: \"Прибыль, грн\",\n          dataIndex: [\"categories\",\"unisex\",\"profit\"],\n          key: \"profit\",\n          \n        },\n        {\n          title: \"Рентабельность, %\",\n          dataIndex: [\"categories\",\"unisex\",\"profitability\"],\n          key: \"profitability\",\n          \n        },\n      ],\n    },\n    {\n      title: \"Total\",\n  \n      children: [\n        {\n          title: \"Количество\",\n          dataIndex: [\"categories\",\"total\",\"sellQuantity\"],\n          key: \"sellQuantity\",\n          \n        },\n        {\n          title: \"Сумма, грн\",\n          dataIndex: [\"categories\",\"total\",\"sellSum\"],\n          key: \"sellSum\",\n          \n        },\n        {\n          title: \"Прибыль, грн\",\n          dataIndex: [\"categories\",\"total\",\"profit\"],\n          key: \"profit\",\n          \n        },\n        {\n          title: \"Рентабельность, %\",\n          dataIndex: [\"categories\",\"total\",\"profitability\"],\n          key: \"profitability\",\n          \n        },\n      ],\n    }\n  ];","import { Table } from 'antd';\nimport React, {useEffect,useRef,useState} from 'react'\nimport { createColumns } from '../../utils/utils';\n\nconst characteristics = [\"salesCount\", \"profit\", \"salesAvgCheck\", \"sellSum\",\"sellCostSum\",\"profitability\"]\nexport function createDefaultDataSource(characteristics, counterpartiesNames){\n\n    return characteristics.map((name,idx)=>{\n    const values = counterpartiesNames.reduce((acc,counterparty) => {\n        acc[counterparty] = 0\n        return acc\n    },{})\n      return {\n        key: idx,\n        name,\n        ...values,\n        \n      };\n    })\n  }\nexport const CounterpartiesReport = (props) => {\n  const counterpartiesNames = [\n    ...props.counterparties.map((item) => item.counterparty.name),\n    \"total\",\n  ];\n  const columns = createColumns(counterpartiesNames, \"counterpartiesReport\");\n  const [dataSource, setDataSource] = useState(\n    createDefaultDataSource(characteristics, counterpartiesNames)\n  );\n\n  function updateDataSource(counterparties, counterpartiesNames) {\n    const newDataSource = createDefaultDataSource(\n      characteristics,\n      counterpartiesNames\n    );\n    counterparties.forEach((counterparty) => {\n      for (let key in counterparty) {\n        if (newDataSource.some((item) => item.name === key)) {\n          const oldObj = newDataSource.find((item) => item.name === key);\n          if (key !== \"salesCount\") {\n            oldObj[counterparty.counterparty.name] = +(\n              parseInt(counterparty[key]) / 100\n            ).toFixed(0);\n          } else {\n            oldObj[counterparty.counterparty.name] = counterparty[key];\n          }\n        }\n      }\n    });\n    newDataSource.forEach((item) => {\n      item.total = counterpartiesNames.reduce((acc, name) => {\n        acc += item[name];\n        return acc;\n      }, 0);\n    });\n    let profitabilityObj = newDataSource.find(\n      (item) => item.name === \"profitability\"\n    );\n    counterpartiesNames.forEach((name) => {\n      const sellCostSumObj = newDataSource.find(\n        (item) => item.name === \"sellCostSum\"\n      );\n      const profitObj = newDataSource.find((item) => item.name === \"profit\");\n      profitabilityObj[name] =\n        +((profitObj[name] * 100) / sellCostSumObj[name]).toFixed(2) + \"%\";\n    });\n    setDataSource(newDataSource);\n  }\n\n  useEffect(() => {\n    updateDataSource(props.counterparties, counterpartiesNames);\n  }, [props.counterparties]);\n\n  return (\n    <>\n      <Table\n        style={{ width: \"70vw\",marginTop:\"5vh\" }}\n        dataSource={dataSource}\n        columns={columns}\n        size=\"small\"\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={props.loading}\n      />\n    </>\n  );\n}","import React, {useEffect,useState} from 'react'\n\nimport { Table } from \"antd\";\nimport {  filterByProductName,  } from '../Sales/SalesTable.functions';\nimport { fetchSales } from '../../core/api';\nimport { defineGender,createDefaultDataSource, commonReportColumns, } from './CommonReport.functions';\nimport {  foldersToProductNames,  } from '../../data';\nimport { CounterpartiesReport } from '../CounterpartiesReport/CounterpartiesReport';\n\n\nexport const CommonReport = ({momentFrom, momentTo, counterparties}) => {\n    const [dataSource, setDataSource] = useState(createDefaultDataSource())\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    function updateDataSource(salesData){\n        const newDataSource = createDefaultDataSource()\n        newDataSource.forEach((productFolder) => {\n           const {categories} = productFolder\n           const {total} = categories\n           const filteredByFolder = filterByProductName(salesData,foldersToProductNames[productFolder.name] )\n            filteredByFolder.forEach((product) => {\n              const gender = defineGender(product.assortment.name);\n              categories[gender].sellQuantity += +product.sellQuantity;\n              categories[gender].sellSum += +product.sellSum;\n              categories[gender].profit += +product.profit;\n              categories[gender].sellCostSum += +product.sellCostSum;\n              total.sellQuantity += +product.sellQuantity;\n              total.sellSum += +product.sellSum;\n              total.profit += +product.profit;\n              total.sellCostSum += +product.sellCostSum;\n            });\n\n        })\n       newDataSource.forEach((productFolder) => {\n        const {categories} = productFolder\n\n           for(let categoryName in productFolder.categories){\n            const profitability =\n              !!productFolder.categories[categoryName].sellCostSum &&\n              +(\n                (productFolder.categories[categoryName].profit * 100) /\n                productFolder.categories[categoryName].sellCostSum\n              ).toFixed(2);\n              \n               categories[categoryName].sellSum = +(parseInt(categories[categoryName].sellSum) / 100).toFixed(0)\n               categories[categoryName].profit = +(parseInt(categories[categoryName].profit) / 100).toFixed(0)\n               categories[categoryName].profitability = !!profitability ? profitability + \"%\" : 0\n           }\n       })\n        setDataSource(newDataSource);\n        setIsLoading(false)\n    }\n    useEffect(()=>{\n        setIsLoading(true)\n\n        fetchSales(undefined, momentFrom, momentTo).then((salesData) => {\n         updateDataSource(salesData)\n        })\n    },[momentTo, momentFrom])\n\n\n    return (\n        <>\n        <Table\n        style={{width:\"70vw\"}}\n        dataSource={dataSource}\n        columns={commonReportColumns}\n        size=\"small\"\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n        \n         />\n         <CounterpartiesReport counterparties={counterparties} />\n      </>\n    )\n}\n","import React from 'react'\nimport {Route,NavLink} from 'react-router-dom'\n\nimport { Button, DatePicker, Dropdown, Menu } from 'antd';\nimport { StockTable } from './components/Stock/StockTable';\nimport { SalesTable } from './components/Sales/SalesTable';\nimport { fetchCounterparty } from './core/api';\nimport { Report } from './components/Report/Report';\nimport { CommonReport } from './components/CommonReport/CommonReport';\nimport { brands, dateFormat } from './data';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst { SubMenu } = Menu;\n\nclass App extends React.Component {\n  state = {\n    current: null,\n    counterparties:null,\n    momentFrom:\"\",\n    momentTo:\"\",\n    currentBrand:\"all\",\n    loading:false\n  };\n \n\n  componentDidMount(){\n    this.setState({ loading: true });\n    fetchCounterparty().then((counterparties) => {\n      this.setState({ counterparties, loading: false });\n    });\n  }\n\n  handleClick = e => {\n    this.setState({ current: e.key });\n  };\n\n  handleMomentFromChange = (momentFrom) => {\n    this.setState({momentFrom})\n  }\n  \n  handleMomentToChange = (momentTo) => {\n    this.setState({momentTo})\n  }\n\n  handleBrandChange = (currentBrand) => {\n    console.log(currentBrand)\n    this.setState({currentBrand})\n  }\n\n  render() {\n    const { current } = this.state;\n  \n    return (\n      <>\n        <Menu\n          onClick={this.handleClick}\n          selectedKeys={[current]}\n          mode=\"horizontal\"\n          theme=\"dark\"\n        >\n          <SubMenu key=\"boys\" title=\"Мальчики\">\n            <Menu.Item key=\"boysStock\">\n              <NavLink to=\"/stock/boys\">Oстатки </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"boysSales\">\n              <NavLink to=\"/sales/boys\">Продажи </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"boysBrandReport\">\n              <NavLink to=\"/report/boys/brands\">Отчет по брендам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"boysSizesReport\">\n              <NavLink to=\"/report/boys/sizes\">Отчет по размерам </NavLink>\n            </Menu.Item>\n          </SubMenu>\n\n          <SubMenu key=\"girls\" title=\"Девочки\">\n            <Menu.Item key=\"girlsStock\">\n              <NavLink to=\"/stock/girls\">Oстатки </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"girlsSales\">\n              <NavLink to=\"/sales/girls\">Продажи </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"girlsBrandReport\">\n              <NavLink to=\"/report/girls/brands\">Отчет по брендам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"girlsSizesReport\">\n              <NavLink to=\"/report/girls/sizes\">Отчет по размерам </NavLink>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"unisex\" title=\"Унисекс\">\n            <Menu.Item key=\"unisexStock\">\n              <NavLink to=\"/stock/unisex\">Oстатки</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"unisexSales\">\n              <NavLink to=\"/sales/unisex\">Продажи</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"unisexBrandReport\">\n              <NavLink to=\"/report/unisex/brands\">Отчет по брендам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"unisexSizesReport\">\n              <NavLink to=\"/report/unisex/sizes\">Отчет по размерам </NavLink>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"common\" title=\"Общее\">\n            <Menu.Item key=\"commonStock\">\n              <NavLink to=\"/stock/common\">Oстатки</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"commonSales\">\n              <NavLink to=\"/sales/common\">Продажи</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"commonBrandReport\">\n              <NavLink to=\"/report/common/brands\">Отчет по брендам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"commonSizesReport\">\n              <NavLink to=\"/report/common/sizes\">Отчет по размерам </NavLink>\n            </Menu.Item>\n          </SubMenu>\n        </Menu>\n        <Route path={[\"/report/:sex/:reportBy\", \"/sales/:sex\",'/stock/:sex']}>\n        <Dropdown overlay={dropDownOptios(brands, this.state.currentBrand, this.handleBrandChange)} placement=\"bottomCenter\">\n          <Button>Бренд</Button>\n        </Dropdown>\n        </Route>\n        \n        <Route\n          path={[\"/report/:sex/:reportBy\", \"/sales/:sex\"]}\n          render={() => {\n            return (\n              <RangePicker\n                onChange={(moments) => {\n                  this.handleMomentFromChange(\n                    moment(moments[0]._d).format(dateFormat)\n                  );\n                  this.handleMomentToChange(\n                    moment(moments[1]._d).format(dateFormat)\n                  );\n                }}\n                format={dateFormat}\n                size=\"large\"\n              />\n            );\n          }}\n        />\n        <Route\n          exact\n          path=\"/stock/:sex\"\n          render={() => <StockTable currentBrand={this.state.currentBrand} />}\n        />\n\n        <Route\n          path=\"/sales/:sex\"\n          render={() => (\n            <SalesTable\n              momentFrom={this.state.momentFrom}\n              momentTo={this.state.momentTo}\n              counterparties={this.state.counterparties}\n            />\n          )}\n        />\n\n        <Route\n          path=\"/report/:sex/:reportBy\"\n          render={() => {\n            return (\n              <>\n                <Report\n                  momentFrom={this.state.momentFrom}\n                  momentTo={this.state.momentTo}\n                  currentBrand={this.state.currentBrand}\n                />\n                {this.state.counterparties && (\n                  <CommonReport\n                    momentFrom={this.state.momentFrom}\n                    momentTo={this.state.momentTo}\n                    counterparties={this.state.counterparties}\n                  />\n                )}\n              </>\n            );\n          }}\n        />\n      </>\n    );\n  }\n}\n\n\nconst dropDownOptios = (items,selectedItem, onChange) => (\n  <Menu theme=\"light\" selectedKeys={[selectedItem]}>\n    {items.map(item=>{\n      return   (\n      <Menu.Item  onClick ={()=>{onChange(item)}} key={item}>\n        {item}   \n    </Menu.Item>)\n    })}\n  \n  </Menu>\n );\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <HashRouter>\n      <App />\n   </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}