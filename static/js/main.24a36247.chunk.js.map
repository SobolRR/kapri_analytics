{"version":3,"sources":["data.js","utils/utils.js","core/api.js","components/Stock/StockTable.functions.js","components/Stock/StockTable.js","components/Sales/SalesTable.functions.js","components/Report/Report.functions.js","components/Sales/SalesTable.js","components/Report/Report.js","components/CommonReport/CommonReport.functions.js","components/CounterpartiesReport/CounterpartiesReport.functions.js","components/CounterpartiesReport/CounterpartiesReport.jsx","components/CommonReport/CommonReport.js","components/Filter/Filter.js","App.js","index.js"],"names":["dateFormat","productGroups","girls","boys","productNamesToFolders","foldersToProductNames","sizes","brands","getSize","name","match","defineProductsBySex","sex","defineRenderValue","tableType","title","row","value","indexOf","showSellSum","additionalData","sellSum","totalSellSum","toFixed","alphabetSortingFunc","a","b","nameA","toLowerCase","nameB","sortFuntions","brandsReport","parseFloat","sales","parseInt","createColumns","titles","res","map","idx","sorting","sorter","dataIndex","key","render","props","style","background","defineBackground","children","unshift","width","stockTitles","sellColumns","stockColumns","brandsReportColumns","folderLinks","unisex","axios","defaults","headers","post","instance","create","baseURL","fetchStock","options","folderName","inTransit","stockMode","folderFilter","link","result","data","fetchSales","counterparty","momentFrom","momentTo","counterpartyFilter","fetchCounterparty","filterByBrand","products","brand","filter","product","calculateStock","stockData","reduce","acc","size","depth","createDefaultStock","forEach","good","item","folder","stock","createDefaultDataSource","initial","sizesInitialValues","NB","total","StockTable","currentBrand","loading","useState","dataSource","setDataSource","isLoading","setIsLoading","setInTransit","useParams","updateDataSource","newDataSource","find","el","totalW","totalD","useEffect","onChange","prev","marginTop","columns","columnstock","pagination","bordered","mapSexToSymbol","filterBySex","str","re","checkSex","assortment","filterByProductName","names","filterFunc","Array","length","push","fillDataSource","productNames","dataSourceCopy","productFolder","findFolderByProductName","sellQuantity","Number","currentSellSum","formattedSellSum","countProductFolderSellSumBySize","createDefaultReportDataSource","items","sum","profit","sellCostSum","profitability","formatDataSource","Object","keys","SalesTable","salesData","currentCounterparty","setShowSellSum","checked","entitiesForReport","slice","productFolders","Report","reportBy","findIndex","mapSymbolToGender","М","Д","У","categories","commonReportColumns","fixed","mappedFields","characteristics","counterpartiesNames","values","CounterpartiesReport","useMemo","counterparties","some","calculateCounterpartiesData","calculateTotal","profitabilityObj","sellCostSumObj","profitObj","calculateProfitability","CommonReport","filtered","gender","categoryName","RangePicker","DatePicker","Filter","handleBrandChange","handleCounterpartyChange","handleMomentFromChange","handleMomentToChange","className","path","overlay","counterpartiesOptions","brandsOptions","moments","moment","_d","format","selectedItem","theme","selectedKeys","Item","onClick","SubMenu","Menu","App","state","current","Date","componentDidMount","setState","then","componentDidUpdate","_","prevState","meta","href","handleClick","e","this","mode","position","top","zIndex","to","exact","onCounterpartyChange","onBrandChange","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.24a36247.chunk.js","sourcesContent":["export const dateFormat = 'YYYY-MM-DD';\n\nexport const productGroups = {\n  girls:[\n    \"Аксессуары\",\n    \"Боди (длинный рукав)\",\n    \"Боди (короткий рукав)\",\n    \"Кофты\",\n    \"Наборы\",\n    \"Носочки\",\n    \"Песочник\",\n     \"Колготки\",\n     \"Ползунки\",\n    \"Пижамы\",\n    \"Платья\",\n    \"Регланы\",\n    \"Футболки\",\n    \"Человечки\",\n    \"Шорты\",\n    \"Штаны\",\n  ],\n  boys:[\n    \"Аксессуары\",\n    \"Боди (длинный рукав)\",\n    \"Боди (короткий рукав)\",\n    \"Кофты\",\n    \"Наборы\",\n    \"Носочки\",\n    \"Песочник\",\n    \"Пижамы\",\n    \"Ползунки\",\n    \"Регланы\",\n    \"Футболки\",\n    \"Человечки\",\n    \"Шорты\",\n    \"Штаны\",\n    ]\n}\n        \n\n\nexport const productNamesToFolders = {\n    \"ДР\":\"Боди (длинный рукав)\",\n    \"КР\":\"Боди (короткий рукав)\",\n    \"Кофт\":\"Кофты\",\n    \"Набор\":\"Наборы\",\n    \"Носочки\":\"Носочки\",\n    \"Ползунк\":\"Ползунки\",\n    \"Колгот\":\"Колготки\",\n    \"Песочник\":\"Песочник\",\n    \"Пижам\":\"Пижамы\",\n    \"Плать\":\"Платья\",\n    \"Реглан\":\"Регланы\",\n    \"Футболк\":\"Футболки\",\n    \"Человеч\":\"Человечки\",\n    \"Шорты\":\"Шорты\",\n    \"Штаны\": \"Штаны\",\n    \"Лосины\":\"Штаны\",\n    \"Костюм\":\"Наборы\"\n}\nexport const foldersToProductNames = {\n  \"Боди (длинный рукав)\":\"ДР\",\n  \"Боди (короткий рукав)\":\"КР\",\n  \"Кофты\":\"Кофт\",\n  \"Наборы\":[\"Набор\",\"Костюм\"],\n \"Носочки\": \"Носочки\",\n  \"Песочник\":\"Песочник\",\n \"Пижамы\": \"Пижам\",\n  \"Платья\":\"Плать\",\n  \"Регланы\":\"Реглан\",\n  \"Футболки\":\"Футболк\",\n \"Человечки\": \"Человеч\",\n  \"Шорты\":\"Шорты\",\n  \"Штаны\":[\"Штаны\",\"Лосины\"],\n  \"Ползунки\":\"Ползунк\",\n    \"Колготки\":\"Колгот\"\n}\n\nexport const sizes = [\n\"NB\",\n\"0-3\",\n\"0-6\",\n\"1-2\",\n\"2-4\",\n\"3-6\",\n\"4-6\",\n\"6-9\",\n\"6-12\",\n\"9-12\",\n\"12-18\",\n\"18-24\",\n\"24-36\",\n]\n\nexport const brands = [\n  \"all\",\n  \"bi baby\",\n  \"bimini\",\n  \"biorganic\",\n  \"Caramell\",\n  \"Disney baby\",\n  \"DreamKid\",\n  \"Dunnes\",\n  \"H&M\",\n  \"Little Angel\",\n  \"George\",\n  \"little life\",\n  \"Marks & Spencer\",\n  \"Matalan\",\n  \"Next\",\n  \"Tesco\",\n  \"KEHA\",\n  \"Мамине чудо\"\n];\n\n","import { sizes } from \"../data\"\n\nexport function getSize(name){\n  const re = /([0-9]+)-([0-9]+)|NB/g;\n  return name.match(re)[0];\n}\n\nexport function defineProductsBySex(sex,productGroups){\n  return sex === \"girls\" || sex === \"common\" ? productGroups['girls'] : productGroups['boys']\n}\n\n\n\nfunction defineRenderValue(tableType,title, row,value){\n  switch(tableType){\n    case \"sales\":\n      return (sizes.indexOf(title)) !== -1 ?\n      value &&`${row.showSellSum ?  row.additionalData.sellSum[title] : value} (${((row.additionalData.sellSum[title])*100/row.totalSellSum).toFixed(2)}%)` \n      : value\n      default:\n        return value\n  } \n\n }\n \nconst alphabetSortingFunc =function(a, b){\n  var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase()\n  if (nameA < nameB) \n    return -1\n  if (nameA > nameB)\n    return 1\n  return 0 \n  }\n\nfunction defineBackground(title,value){\n  return title === \"total\" ? \"white\" : parseInt(value) > 0 ? \"#C7E78F\":\"#e6948e\"\n}\n\nconst sortFuntions = {\n  brandsReport: (title) => (a, b) =>  parseFloat(a[title]) - parseFloat(b[title]),\n  sales: (title) => (a, b) => parseInt(a[title]) - parseInt(b[title]),\n  \n};\n\nexport function createColumns(titles,tableType){\n\n    const res = titles.map((title,idx)=>{\n      const sorting =\n        !!sortFuntions[tableType] && sizes.indexOf(title) === -1\n          ? { sorter: sortFuntions[tableType](title) }\n          : {};\n      return {\n        title: title,\n        dataIndex: title,\n        key: idx,\n        ...sorting,\n        render(value, row) {\n          const background = defineBackground(title, value);\n          return {\n            props: {\n              style: { background },\n            },\n            children: (\n              <div>{defineRenderValue(tableType, title, row, value)} </div>\n            ),\n          };\n        },\n      };\n    })\n    res.unshift(  {\n      title: 'Название',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: alphabetSortingFunc,\n      width:200\n    })\n    \n    return res\n  }\n  \nconst stockTitles = [...sizes,'total']\nconst sellTitles = [...sizes,'total',\"totalSellSum\"]\nconst brandsReportTitles=['sum','profit',\"profitability\"]\n\nexport const sellColumns = createColumns(sellTitles,\"sales\")\nexport const stockColumns = createColumns(stockTitles, \"stock\")\nexport const brandsReportColumns = createColumns(brandsReportTitles, \"brandsReport\")\nexport const counterpartiesReportColumns = createColumns([\"salesCount\", \"profit\", \"salesAvgCheck\", \"sellSum\",],\"counterpartiesReport\")\n\n\n\n\n\n\n","import axios from \"axios\"\n\n\n\nconst folderLinks = {\n  girls:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/c9ac503e-1d16-11eb-0a80-050d002dcd9a\",\n  boys:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/00cfa023-1d16-11eb-0a80-050d002dade8\",\n  unisex:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/73475072-28e9-11eb-0a80-029000103030\"\n}\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\nconst instance = axios.create({baseURL:\"https://kapri-server.herokuapp.com\"})\n\nexport const fetchStock = async (options) => {\n  const { folderName, inTransit } = options;\n  const stockMode = inTransit ? \"all\" : \"positiveOnly\";\n  const folderFilter = folderName === 'common' ?  \"\" : `&filter=productFolder=${folderLinks[folderName]}`\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/stock/all?groupBy=consignment&filter=stockMode=${stockMode}&filter=inTransitOnly=${inTransit}` + folderFilter\n\n  const result = await instance.post(\"/\", { link });\n    return result.data;\n}\n\nexport const fetchSales = async (\n  counterparty,\n  momentFrom,\n  momentTo\n) => {\n\n  const counterpartyFilter = !!counterparty && counterparty !== \"All\" ?`&filter=counterparty=${counterparty}` : \"\"\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/profit/byvariant?momentFrom=${momentFrom} 00:00:00&momentTo=${momentTo} 23:59:59` + counterpartyFilter\n\n  const result = await instance.post(\n    '/',{link},\n   \n  );\n  return result.data\n};\n\nexport const fetchCounterparty = async () => {\n  const link = \"https://online.moysklad.ru/api/remap/1.2/report/profit/bycounterparty\"\n  const result = await instance.post(\"/\", { link });\n  return result.data\n}\n\n","import { productGroups, sizes } from \"../../data\"\nimport { defineProductsBySex, getSize } from \"../../utils/utils\"\n\nfunction createDefaultStock(sex){\n    const products = defineProductsBySex(sex,productGroups)\n    return products.map((product)=>{\n      return    {\n        name: product,\n        sizes: sizes.reduce((acc,size)=>{\n          return{...acc,[size]:{ width: 0, depth: 0,inTransit:0,}}\n        },{})\n      }\n    })\n  }\n\nexport const filterByBrand = (products, brand) => {\n    return products.filter((product) => {\n       return product.name.indexOf(brand) !== -1;\n     });\n   }\n   \nexport function calculateStock(products, sex, inTransit) {\n  const stockData = createDefaultStock(sex);\n  products.forEach((good) => {\n    const size = getSize(good.name);\n    stockData.forEach((item) => {\n      if (good.folder.name === item.name && !!item.sizes[size]) {\n        item.sizes[size].width += 1;\n        item.sizes[size].depth += inTransit ? good.inTransit : good.stock;\n      }\n    });\n  });\n  return stockData;\n}\n   \nexport function createDefaultDataSource(sex,initial=\"\"){\n  const products = defineProductsBySex(sex, productGroups)\n  const sizesInitialValues = sizes.reduce((acc,size)=>{\n    return {...acc,[size]:initial}\n  },{})\n  return products.map((product,idx)=>{\n  \n    return {\n      key: idx,\n      name: product,\n      NB: initial,\n      ...sizesInitialValues,\n      total: initial,\n      \n     \n    };\n  })\n}","import React,{useEffect,useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport { Table} from 'antd';\nimport {stockColumns} from '../../utils/utils'\nimport { fetchStock } from '../../core/api';\nimport { Checkbox } from 'antd';\nimport { calculateStock, createDefaultDataSource, filterByBrand } from './StockTable.functions';\n\n\n\nexport const StockTable = ({currentBrand,loading}) => {\n  \n  const [dataSource, setDataSource] =useState(null)\n  const [isLoading,setIsLoading] = useState(false)\n  const [inTransit, setInTransit] =  useState(false)\n  const {sex} = useParams()\n  \n\n  const updateDataSource = async () => {\n    const newDataSource = createDefaultDataSource(sex);\n    setIsLoading(true);\n    const options = { folderName: sex, inTransit };\n    let products = await fetchStock(options);\n\n    if (currentBrand !== \"all\") {\n      products = filterByBrand(products,currentBrand)\n    }\n    const stockData = calculateStock(products,sex, inTransit)\n   \n    newDataSource.forEach((item) => {\n      const res = stockData.find((el) => item.name === el.name);\n      let totalW = 0;\n      let totalD = 0;\n\n      for (let size in res.sizes) {\n        totalW += res.sizes[size].width;\n        totalD += res.sizes[size].depth;\n        item[size] = `${res.sizes[size].depth} (${res.sizes[size].width}) `;\n      }\n      item.total = `${totalD} (${totalW})`;\n    });\n\n    setDataSource(newDataSource);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    updateDataSource();\n  }, [sex, inTransit, currentBrand]);\n\n  return (\n    <>\n      <Checkbox style={{\"marginLeft\":\"30px\"}} onChange={() => setInTransit((prev) => !prev)}>\n        In transit\n      </Checkbox>\n      <Table\n        dataSource={dataSource}\n        style={{marginTop:\"4vh\"}}\n        columns={stockColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\n\n","import { productGroups, productNamesToFolders, sizes } from \"../../data\";\nimport { defineProductsBySex, getSize } from \"../../utils/utils\";\n\nconst mapSexToSymbol = {\n    boys: \"М\",\n    girls: \"Д\",\n    unisex: \"У\",\n  };\n\n\nexport function checkSex(str,sex){\n    const re = `^[${mapSexToSymbol[sex]}]{1}`;\n    const res = str.match(re);\n    if( res) {\n        return mapSexToSymbol[sex] === res[0];\n    }\n}\n\nexport function filterBySex(products, sex){\n  return sex === \"common\"\n    ? products\n    : products.filter((product) => checkSex(product.assortment.name, sex));\n}\n\nexport function filterByProductName(products,names){\n  let res = [];\n  const filterFunc = (name) => (product) =>\n    product.assortment.name.indexOf(name) !== -1;\n  if (names instanceof Array && names.length > 0) {\n    names.forEach((name) => {\n      res.push(...products.filter(filterFunc(name)));\n    });\n  } else {\n    res.push(...products.filter(filterFunc(names)));\n  }\n\n  return res;\n}\n\nexport function findFolderByProductName(dataSource,name){\n    return  dataSource.find((productFolder) => {\n        return productFolder.name === productNamesToFolders[name];\n      });\n}\nexport function countProductFolderSellSumBySize(productFolder,product, size){\n  const currentSellSum = productFolder[\"additionalData\"].sellSum[size]\n  const formattedSellSum = (product.sellSum / 100).toFixed(0)\n  if (currentSellSum) {\n    productFolder[\"additionalData\"].sellSum[size] += Number(formattedSellSum);\n  } else {\n    productFolder[\"additionalData\"].sellSum[size] = Number(formattedSellSum);\n  }\n}\nexport function fillDataSource(dataSource,productNames,products){\nconst dataSourceCopy = [...dataSource]\n  productNames.forEach((name) => {\n    filterByProductName(products, [name]).forEach((product) => {\n      const productFolder = findFolderByProductName(dataSourceCopy, name);\n      const size = getSize(product.assortment.name);\n      productFolder[size] += product.sellQuantity;\n      productFolder[\"total\"] += product.sellQuantity;\n      productFolder[\"sellSum\"] = +product.sellSum;\n      productFolder[\"totalSellSum\"] += Number((product.sellSum / 100).toFixed(0));\n      countProductFolderSellSumBySize(productFolder, product, size)      \n    });\n  });\n  return dataSourceCopy;\n}\n\nexport function createDefaultDataSource(sex,initial=\"\",showSellSum){\n  const products = defineProductsBySex(sex, productGroups)\n  const sizesInitialValues = sizes.reduce((acc,size)=>{\n    return {...acc,[size]:initial}\n  },{})\n  return products.map((product,idx)=>{\n  \n    return {\n      key: idx,\n      name: product,\n      NB: initial,\n      ...sizesInitialValues,\n      total: initial,\n      totalSellSum: initial,\n      additionalData: {\n        sellSum: {},\n      },\n      showSellSum\n    };\n  })\n}","\nexport function createDefaultReportDataSource(items){\n    return items.map((name,idx)=>{\n        \n        return {\n          key: idx,\n          name,\n          sum:0,\n          profit:0,\n          sellCostSum:0,\n          profitability:0\n        };\n      })\n  }\n\n\n export  const formatDataSource = (dataSource) => {\n    return dataSource.map((name) => {\n      const profitability = +((name.profit * 100) / name.sellCostSum).toFixed(\n        2\n      );\n      \n      return {\n        ...name,\n        sum: (name.sum / 100).toFixed(2),\n        profit: (name.profit / 100).toFixed(2),\n        profitability: !!profitability ? profitability + \"%\" : 0,\n      };\n    });\n  }\n\n export const fillDataSource = (dataSource, product, idx) => {\n   const data = [...dataSource];\n   if (idx > -1) {\n     data[idx] = {\n       ...data[idx],\n       sum: (data[idx].sum += +product.sellSum),\n       profit: (data[idx].profit += +product.profit),\n       sellCostSum: (data[idx].sellCostSum += +product.sellCostSum),\n     };\n   }\n   return data;\n };\n\n  export const filterByBrand = (products, brand) => {\n    if (brand !== \"all\") {\n      return products.filter((product) => {\n        return product.assortment.name.indexOf(brand) !== -1;\n      });\n    } \n    return products\n   \n   }\n","import React,{useEffect,  useState} from 'react'\nimport {productNamesToFolders} from '../../data'\nimport { sellColumns, } from '../../utils/utils'\nimport {  Table } from \"antd\";\nimport { useParams } from 'react-router-dom'\nimport { createDefaultDataSource, filterBySex, fillDataSource } from './SalesTable.functions';\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\nimport { filterByBrand } from '../Report/Report.functions';\n\nexport const productNames = Object.keys(productNamesToFolders);\n\n\nexport const SalesTable = ({salesData,currentCounterparty, currentBrand,loading}) => {\n  \n  const { sex } = useParams();\n  const [dataSource, setDataSource] = useState(null);\n  const [showSellSum, setShowSellSum] = useState(true)\n\n  const updateDataSource = (salesData,currentBrand) => {\n    let dataSource = createDefaultDataSource(sex, 0, showSellSum);\n    let products = filterBySex(salesData, sex);\n     products = filterByBrand(products,currentBrand)\n    dataSource = fillDataSource(dataSource, productNames, products);\n    setDataSource(dataSource)\n  };\n\n  useEffect(() => {\n\n      updateDataSource(salesData,currentBrand)\n        \n  }, [sex,currentCounterparty,showSellSum,salesData,currentBrand]);\n  return (\n    <>\n        <Checkbox checked={showSellSum} style={{\"marginLeft\":\"30px\"}}onChange={() => setShowSellSum((prev) => !prev)}>\n        SellSum\n      </Checkbox>\n      <Table\n        dataSource={dataSource}\n        columns={sellColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={loading}\n      />\n    </>\n  );\n}\n\n\n\n","import React,{useEffect, useState} from 'react'\nimport { useParams } from 'react-router-dom'\nimport { brandsReportColumns, getSize } from '../../utils/utils';\nimport { createDefaultReportDataSource,fillDataSource,filterByBrand, formatDataSource } from './Report.functions';\nimport { Table } from 'antd';\nimport { filterBySex } from '../Sales/SalesTable.functions';\nimport { brands, foldersToProductNames, sizes } from '../../data';\nimport {productGroups} from '../../data'\nimport {  filterByProductName,  } from '../Sales/SalesTable.functions';\n\nconst entitiesForReport = {\n    brands:brands.slice(1),\n    sizes,\n    productFolders:productGroups.girls\n  }\n\nexport const Report = ({\n  salesData=[],\n  momentFrom,\n  momentTo,\n  currentBrand,\n  loading\n}) => {\n  const { sex } = useParams();\n  const { reportBy } = useParams();\n  const [dataSource, setDataSource] = useState(\n    createDefaultReportDataSource(entitiesForReport[reportBy])\n  );\n  const updateDataSource = async (salesData) => {\n    let data = filterBySex(salesData, sex);\n    if (reportBy !== \"brands\") {\n      data = filterByBrand(data, currentBrand);\n    }\n    let newDataSource = createDefaultReportDataSource(entitiesForReport[reportBy]);\n\n    switch (reportBy) {\n      case \"brands\":\n        brands.forEach((brand) => {\n          const products = filterByBrand(data, brand);\n          products.forEach((product) => {\n            const idx = dataSource.findIndex((item) => item.name === brand);\n            newDataSource = fillDataSource(dataSource, product, idx);\n          });\n        });\n        break;\n      case \"sizes\":\n        data.forEach((product) => {\n          const idx = dataSource.findIndex(\n            (item) => item.name === getSize(product.assortment.name)\n          );\n          newDataSource = fillDataSource(dataSource, product, idx);\n        });\n        break;\n      case \"productFolders\":\n        newDataSource.forEach((productFolder, idx) => {\n          const filteredByFolder = filterByProductName(\n            data,\n            foldersToProductNames[productFolder.name]\n          );\n          filteredByFolder.forEach((product) => {\n            newDataSource = fillDataSource(newDataSource, product, idx);\n          });\n        });\n    }\n\n    setDataSource(formatDataSource(newDataSource));\n  };\n  useEffect(() => {\n    updateDataSource(salesData);\n  }, [sex, momentFrom, momentTo, reportBy, currentBrand, salesData]);\n\n  return (\n    <>\n      <Table\n        style={{ width: \"70vw\" }}\n        dataSource={dataSource}\n        columns={brandsReportColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={loading}\n      />\n    </>\n  );\n};\n\n\n","import { productGroups } from \"../../data\";\n\nexport const mapSymbolToGender = {\n  М: \"boys\",\n  Д: \"girls\",\n  У: \"unisex\",\n};\n\nexport const defineGender = (str) => mapSymbolToGender[str[0]]\n\n\nexport const createDefaultDataSource = ()=>productGroups.girls.map((name,idx) => {\n    return  {\n      key:idx,\n        name,\n        categories: {\n          girls: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0,\n            \n          },\n          boys: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0\n          },\n          unisex: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0\n          },\n          total: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0\n          }\n        },\n      }\n  }) \n\n  export const commonReportColumns = [\n    {\n      title: \"Категория товаров\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: 100,\n      fixed: \"left\",\n    },\n    {\n      title: \"Girls\",\n      children: [\n        {\n          title: \"Количество\",\n          dataIndex: [\"categories\",\"girls\",\"sellQuantity\"],\n          key: \"sellQuantity\",\n        },\n        {\n          title: \"Сумма, грн\",\n          dataIndex: [\"categories\",\"girls\",\"sellSum\"],\n          key: \"sellSum\",\n        },\n        {\n          title: \"Прибыль, грн\",\n          dataIndex: [\"categories\",\"girls\",\"profit\"],\n          key: \"profit\",\n        },\n        {\n          title: \"Рентабельность, %\",\n          dataIndex: [\"categories\",\"girls\",\"profitability\"],\n          key: \"profitability\",\n        },\n      ],\n    },\n    {\n      title: \"Boys\",\n  \n      children: [\n        {\n          title: \"Количество\",\n          dataIndex: [\"categories\",\"boys\",\"sellQuantity\"],\n          key: \"sellQuantity\",\n          \n        },\n        {\n          title: \"Сумма, грн\",\n          dataIndex: [\"categories\",\"boys\",\"sellSum\"],\n          key: \"sellSum\",\n          \n        },\n        {\n          title: \"Прибыль, грн\",\n          dataIndex: [\"categories\",\"boys\",\"profit\"],\n          key: \"profit\",\n          \n        },\n        {\n          title: \"Рентабельность, %\",\n          dataIndex: [\"categories\",\"boys\",\"profitability\"],\n          key: \"profitability\",\n          \n        },\n      ],\n    },\n    {\n      title: \"Unisex\",\n  \n      children: [\n        {\n          title: \"Количество\",\n          dataIndex: [\"categories\",\"unisex\",\"sellQuantity\"],\n          key: \"sellQuantity\",\n          \n        },\n        {\n          title: \"Сумма, грн\",\n          dataIndex: [\"categories\",\"unisex\",\"sellSum\"],\n          key: \"sellSum\",\n          \n        },\n        {\n          title: \"Прибыль, грн\",\n          dataIndex: [\"categories\",\"unisex\",\"profit\"],\n          key: \"profit\",\n          \n        },\n        {\n          title: \"Рентабельность, %\",\n          dataIndex: [\"categories\",\"unisex\",\"profitability\"],\n          key: \"profitability\",\n          \n        },\n      ],\n    },\n    {\n      title: \"Total\",\n  \n      children: [\n        {\n          title: \"Количество\",\n          dataIndex: [\"categories\",\"total\",\"sellQuantity\"],\n          key: \"sellQuantity\",\n          \n        },\n        {\n          title: \"Сумма, грн\",\n          dataIndex: [\"categories\",\"total\",\"sellSum\"],\n          key: \"sellSum\",\n          \n        },\n        {\n          title: \"Прибыль, грн\",\n          dataIndex: [\"categories\",\"total\",\"profit\"],\n          key: \"profit\",\n          \n        },\n        {\n          title: \"Рентабельность, %\",\n          dataIndex: [\"categories\",\"total\",\"profitability\"],\n          key: \"profitability\",\n          \n        },\n      ],\n    }\n  ];","const mappedFields = {\n    \"salesCount\":\"Количество продаж\",\n    \"profit\":\"Прибыль\",\n    \"salesAvgCheck\":\"Средний чек\",\n    \"sellSum\":\"Объем продаж\",\n    \"sellCostSum\":\"Себестоимость\",\n    \"profitability\":\"Рентабельность\"\n  }\n\nexport function createDefaultDataSource(characteristics, counterpartiesNames){\n  return characteristics.map((name) => {\n    const values = counterpartiesNames.reduce((acc, counterparty) => {\n      acc[counterparty] = 0;\n      return acc;\n    }, {});\n    return {\n      key: name,\n      name,\n      ...values,\n    };\n  });\n}\n\nexport const calculateTotal = (dataSource,counterpartiesNames) => {\n    dataSource.forEach((item) => {\n    item.total = counterpartiesNames.reduce((acc, name) => {\n      acc += item[name];\n      return acc;\n    }, 0);\n  });\n}\n\nexport const calculateProfitability = (newDataSource, counterpartiesNames) => {\n  let profitabilityObj = newDataSource.find(\n    (item) => item.name === \"Рентабельность\"\n  );\n  counterpartiesNames.forEach((name) => {\n    const sellCostSumObj = newDataSource.find(\n      (item) => item.name === \"Себестоимость\"\n    );\n    const profitObj = newDataSource.find((item) => item.name === \"Прибыль\");\n    profitabilityObj[name] =\n      +((profitObj[name] * 100) / sellCostSumObj[name]).toFixed(2) + \"%\";\n  });\n};\n\nexport const calculateCounterpartiesData =(newDataSource, counterparties,)=>{\n    counterparties.forEach((counterparty) => {\n      for (let key in counterparty) {\n        if (newDataSource.some((item) => item.name === mappedFields[key])) {\n          const oldObj = newDataSource.find((item) => item.name === mappedFields[key]);\n          if (key !== \"salesCount\") {\n            oldObj[counterparty.counterparty.name] = +(\n              parseInt(counterparty[key]) / 100\n            ).toFixed(0);\n          } else {\n            oldObj[counterparty.counterparty.name] = counterparty[key];\n          }\n        }\n      }\n    });\n  }\n  ","import { Table } from 'antd';\nimport React, {useEffect,useState, useMemo} from 'react'\nimport { createColumns } from '../../utils/utils';\nimport {\n  createDefaultDataSource,\n  calculateTotal,\n  calculateProfitability,\n  calculateCounterpartiesData,\n} from \"./CounterpartiesReport.functions\";\n\nconst characteristics = [\"Количество продаж\", \"Прибыль\", \"Средний чек\", \"Объем продаж\",\"Себестоимость\",\"Рентабельность\"]\n\nexport const CounterpartiesReport = (props) => {\n  const counterpartiesNames = useMemo(()=>[\n    ...props.counterparties.map((item) => item.counterparty.name),\n    \"total\",\n  ],[props.counterparties])\n\n  const columns = useMemo(\n    () => createColumns(counterpartiesNames, \"counterpartiesReport\"),\n    [props.counterparties]\n  );\n  const [dataSource, setDataSource] = useState(\n    createDefaultDataSource(characteristics, counterpartiesNames)\n  );\n\n  function updateDataSource(counterparties, counterpartiesNames) {\n    let newDataSource = createDefaultDataSource(\n      characteristics,\n      counterpartiesNames\n    );\n    calculateCounterpartiesData(newDataSource, counterparties)\n    calculateTotal(newDataSource, counterpartiesNames)\n    calculateProfitability(newDataSource,counterpartiesNames)\n    setDataSource(newDataSource);\n  }\n\n  useEffect(() => {\n    updateDataSource(props.counterparties, counterpartiesNames);\n  }, [props.counterparties,counterpartiesNames]);\n\n  return (\n    <>\n      <Table\n        style={{ width: \"70vw\",marginTop:\"1vh\" }}\n        dataSource={dataSource}\n        columns={columns}\n        size=\"small\"\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={props.loading}\n      />\n    </>\n  );\n}\n\n","import React, {useEffect,useState} from 'react'\n\nimport { Table } from \"antd\";\nimport {  filterByProductName,  } from '../Sales/SalesTable.functions';\nimport { defineGender,createDefaultDataSource, commonReportColumns, } from './CommonReport.functions';\nimport {  foldersToProductNames,  } from '../../data';\nimport { CounterpartiesReport } from '../CounterpartiesReport/CounterpartiesReport';\nimport { filterByBrand } from '../Report/Report.functions';\n\n\nexport const CommonReport = ({momentFrom, momentTo, counterparties,salesData,loading,currentBrand}) => {\n    const [dataSource, setDataSource] = useState(createDefaultDataSource())\n    \n    function updateDataSource(salesData,currentBrand){\n        const newDataSource = createDefaultDataSource()\n        newDataSource.forEach((productFolder) => {\n           const {categories} = productFolder\n           const {total} = categories\n           let filtered = filterByProductName(salesData,foldersToProductNames[productFolder.name] )\n           if(currentBrand !== \"all\"){\n             filtered = filterByBrand(filtered,currentBrand);\n           }\n            filtered.forEach((product) => {\n              const gender = defineGender(product.assortment.name);\n              categories[gender].sellQuantity += +product.sellQuantity;\n              categories[gender].sellSum += +product.sellSum;\n              categories[gender].profit += +product.profit;\n              categories[gender].sellCostSum += +product.sellCostSum;\n              total.sellQuantity += +product.sellQuantity;\n              total.sellSum += +product.sellSum;\n              total.profit += +product.profit;\n              total.sellCostSum += +product.sellCostSum;\n            });\n\n        })\n       newDataSource.forEach((productFolder) => {\n        const {categories} = productFolder\n\n           for(let categoryName in productFolder.categories){\n            const profitability =\n              !!productFolder.categories[categoryName].sellCostSum &&\n              +(\n                (productFolder.categories[categoryName].profit * 100) /\n                productFolder.categories[categoryName].sellCostSum\n              ).toFixed(2);\n              \n               categories[categoryName].sellSum = +(parseInt(categories[categoryName].sellSum) / 100).toFixed(0)\n               categories[categoryName].profit = +(parseInt(categories[categoryName].profit) / 100).toFixed(0)\n               categories[categoryName].profitability = !!profitability ? profitability + \"%\" : 0\n           }\n       })\n        setDataSource(newDataSource);\n    }\n    useEffect(()=>{\n\n        \n         updateDataSource(salesData,currentBrand)\n    \n    },[momentTo, momentFrom, salesData, currentBrand])\n\n\n    return (\n        <>\n        <Table\n        style={{width:\"70vw\"}}\n        dataSource={dataSource}\n        columns={commonReportColumns}\n        size=\"small\"\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={loading}\n        \n         />\n         <CounterpartiesReport  counterparties={counterparties} loading={!!!counterparties.length}/>\n      </>\n    )\n}","import { Button, DatePicker, Dropdown, Menu } from 'antd';\nimport React from 'react'\nimport { Route } from 'react-router';\nimport { brands, dateFormat } from '../../data';\nimport moment from 'moment';\n\nimport \"./Filter.css\"\n\nconst { RangePicker } = DatePicker;\n\n\nexport const Filter = ({\n  counterparties,\n  currentCounterparty,\n  currentBrand,\n  handleBrandChange,\n  handleCounterpartyChange,\n  handleMomentFromChange,\n  handleMomentToChange,\n}) => {\n  return (\n    <div\n      className=\"filter\"\n    >\n      <Route path={[\"/sales/:sex\"]}>\n        <Dropdown\n          overlay={counterpartiesOptions(\n            counterparties,\n            currentCounterparty,\n            handleCounterpartyChange\n          )}\n        >\n          <Button>{!!currentCounterparty ? currentCounterparty.counterparty.name : \"Counterparty\"}</Button>\n        </Dropdown>\n      </Route>\n      <Route path={[\"/report/:sex/sizes\",\"/report/:sex/productFolders\", \"/sales/:sex\", \"/stock/:sex\", \"/report/commonReport\"]}>\n        <Dropdown\n          overlay={brandsOptions(brands, currentBrand, handleBrandChange)}\n        >\n          <Button>{currentBrand !== \"all\" ? currentBrand : \"Brand\"}</Button>\n        </Dropdown>\n      </Route>\n\n      <Route\n        path={[\"/report/:sex/:reportBy\", \"/sales/:sex\", \"/report/commonReport\"]}\n        render={() => {\n          return (\n            <RangePicker\n              onChange={(moments) => {\n                handleMomentFromChange(\n                  moment(moments[0]._d).format(dateFormat)\n                );\n                handleMomentToChange(moment(moments[1]._d).format(dateFormat));\n              }}\n              format={dateFormat}\n              size=\"large\"\n            />\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport const brandsOptions = (items,selectedItem, onChange) => {\n  \n    return (\n    <Menu theme=\"dark\" selectedKeys={[selectedItem]}>\n      \n      {items.map(item=>{\n        return   (\n        <Menu.Item  onClick ={()=>{onChange(item)}} key={item}>\n          {item}   \n      </Menu.Item>)\n      })}\n    \n    </Menu>\n   );}\n  export const counterpartiesOptions = (items, currentCounterparty, onChange) => \n      (<Menu theme=\"dark\" selectedKeys={[!!currentCounterparty ? currentCounterparty.counterparty.name :\"All\"]}>\n        <Menu.Item\n          onClick={() => {\n            onChange(null)\n  \n          }}\n          key={\"All\"}\n        >\n          {\"All\"}\n        </Menu.Item>\n        {items.map((item) => {\n          return (\n            <Menu.Item\n              onClick={() => {\n                onChange(item)\n              }}\n              key={item.counterparty.name}\n            >\n              {item.counterparty.name}\n            </Menu.Item>\n          );\n        })}\n      </Menu>\n    );\n    \n","import React from 'react'\nimport {Route,NavLink} from 'react-router-dom'\nimport { Menu } from \"antd\";\nimport { StockTable } from './components/Stock/StockTable';\nimport { SalesTable } from './components/Sales/SalesTable';\nimport { fetchCounterparty, fetchSales } from './core/api';\nimport { Report } from './components/Report/Report';\nimport { CommonReport } from './components/CommonReport/CommonReport';\nimport { Filter } from './components/Filter/Filter';\nimport { dateFormat } from './data';\nimport moment from \"moment\"\n\nconst { SubMenu } = Menu;\n\nclass App extends React.Component {\n  state = {\n    current: null,\n    counterparties:[],\n    currentCounterparty:null,\n    momentFrom:\"2021-02-15\",\n    momentTo:moment(new Date()).format(dateFormat),\n    currentBrand:\"all\",\n    loading:true,\n    salesData:[]\n  };\n \n  componentDidMount =()=>{\n\n    const {currentCounterparty, momentFrom, momentTo} = this.state\n    this.setState({loading:true})\n    fetchCounterparty().then(counterparties => this.setState({ counterparties})).then(()=>{\n      fetchSales(currentCounterparty, momentFrom, momentTo).then(salesData => this.setState({salesData,loading:false}))\n\n    })\n  }\n\ncomponentDidUpdate =(_, prevState) => {\n  const {currentCounterparty, momentFrom, momentTo} = this.state\n  const counterparty = !!currentCounterparty ? currentCounterparty.counterparty.meta.href :currentCounterparty\n\n  if (\n    prevState.currentCounterparty !== currentCounterparty ||\n    prevState.momentTo !== momentTo ||\n    prevState.momentFrom !== momentFrom\n  ) {\n    this.setState({ loading: true });\n    fetchSales(counterparty, momentFrom, momentTo).then((salesData) =>\n      this.setState({ salesData, loading: false })\n    );\n  } \n}\n\n  handleClick = e => {\n    this.setState({ current: e.key });\n  };\n\n  handleMomentFromChange = (momentFrom) => {\n    this.setState({momentFrom})\n  }\n  \n  handleMomentToChange = (momentTo) => {\n    \n\n    this.setState({momentTo})\n  }\n\n  handleBrandChange = (currentBrand) => {\n    this.setState({currentBrand})\n  }\n\n  handleCounterpartyChange = (currentCounterparty)=> this.setState({currentCounterparty})\n\n\n  render() {\n    const { current } = this.state;\n  \n    return (\n      <>\n        <Menu\n          onClick={this.handleClick}\n          selectedKeys={[current]}\n          mode=\"horizontal\"\n          theme=\"dark\"\n          style={{ position: \"sticky\", top: \"0\", zIndex: \"1000\" }}\n        >\n          <SubMenu key=\"boys\" title=\"Мальчики\">\n            <Menu.Item key=\"boysStock\">\n              <NavLink to=\"/stock/boys\">Oстатки </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"boysSales\">\n              <NavLink to=\"/sales/boys\">Продажи </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"boysBrandReport\">\n              <NavLink to=\"/report/boys/brands\">Отчет по брендам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"boysSizesReport\">\n              <NavLink to=\"/report/boys/sizes\">Отчет по размерам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"boysProductFolderReport\">\n              <NavLink to=\"/report/boys/productFolders\">Отчет категориям товаров </NavLink>\n            </Menu.Item>\n          </SubMenu>\n\n          <SubMenu key=\"girls\" title=\"Девочки\">\n            <Menu.Item key=\"girlsStock\">\n              <NavLink to=\"/stock/girls\">Oстатки </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"girlsSales\">\n              <NavLink to=\"/sales/girls\">Продажи </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"girlsBrandReport\">\n              <NavLink to=\"/report/girls/brands\">Отчет по брендам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"girlsSizesReport\">\n              <NavLink to=\"/report/girls/sizes\">Отчет по размерам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"girlsProductFolderReport\">\n              <NavLink to=\"/report/girls/productFolders\">Отчет категориям товаров </NavLink>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"unisex\" title=\"Унисекс\">\n            <Menu.Item key=\"unisexStock\">\n              <NavLink to=\"/stock/unisex\">Oстатки</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"unisexSales\">\n              <NavLink to=\"/sales/unisex\">Продажи</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"unisexBrandReport\">\n              <NavLink to=\"/report/unisex/brands\">Отчет по брендам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"unisexSizesReport\">\n              <NavLink to=\"/report/unisex/sizes\">Отчет по размерам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"unisexProductFolderReport\">\n              <NavLink to=\"/report/unisex/productFolders\">Отчет категориям товаров </NavLink>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"common\" title=\"Общее\">\n            <Menu.Item key=\"commonStock\">\n              <NavLink to=\"/stock/common\">Oстатки</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"commonSales\">\n              <NavLink to=\"/sales/common\">Продажи</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"commonBrandReport\">\n              <NavLink to=\"/report/common/brands\">Отчет по брендам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"commonSizesReport\">\n              <NavLink to=\"/report/common/sizes\">Отчет по размерам </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"cpmmonProductFolderReport\">\n              <NavLink to=\"/report/common/productFolders\">Отчет категориям товаров </NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"commonReport\">\n              <NavLink to=\"/report/commonReport/\">Общий отчет</NavLink>\n            </Menu.Item>\n          </SubMenu>\n        </Menu>\n\n        <Filter\n          counterparties={this.state.counterparties}\n          currentCounterparty={this.state.currentCounterparty}\n          currentBrand={this.state.currentBrand}\n          handleBrandChange={this.handleBrandChange}\n          handleCounterpartyChange={this.handleCounterpartyChange}\n          handleMomentFromChange={this.handleMomentFromChange}\n          handleMomentToChange={this.handleMomentToChange}\n\n        />\n        <Route\n          exact\n          path=\"/stock/:sex\"\n          render={() => <StockTable currentBrand={this.state.currentBrand} />}\n        />\n          <Route\n            path=\"/sales/:sex\"\n            render={() => (\n              <SalesTable\n                salesData={this.state.salesData}\n                momentFrom={this.state.momentFrom}\n                momentTo={this.state.momentTo}\n                counterparties={this.state.counterparties}\n                loading={this.state.loading}\n                currentCounterparty={this.state.currentCounterparty}\n                currentBrand={this.state.currentBrand}\n                onCounterpartyChange={this.handleCounterpartyChange}\n              />\n            )}\n          />\n        <Route\n          path=\"/report/:sex/:reportBy\"\n          render={() => {\n            return (\n                <Report\n                  salesData={this.state.salesData}\n                  momentFrom={this.state.momentFrom}\n                  momentTo={this.state.momentTo}\n                  currentBrand={this.state.currentBrand}\n                  loading={this.state.loading}\n                  onBrandChange={this.handleBrandChange}\n                />\n            );\n          }}\n        />\n           <Route\n          path=\"/report/commonReport\"\n          render={() => {\n            return (\n              \n              <CommonReport\n              salesData={this.state.salesData}\n              momentFrom={this.state.momentFrom}\n              momentTo={this.state.momentTo}\n              counterparties={this.state.counterparties}\n              currentBrand={this.state.currentBrand}\n              loading={this.state.loading}\n              />\n            );\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <HashRouter>\n      <App />\n   </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}