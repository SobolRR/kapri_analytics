{"version":3,"sources":["data.js","utils/utils.js","core/api.js","components/Stock/StockTable.functions.js","components/Stock/StockTable.js","components/Sales/SalesTable.functions.js","components/Sales/SalesTable.js","components/Report/Report.functions.js","components/Report/Report.js","components/CommonReport/CommonReport.functions.js","components/CommonReport/CommonReport.js","App.js","index.js"],"names":["dateFormat","productGroups","girls","boys","productNamesToFolders","foldersToProductNames","sizes","brands","getSize","name","match","defineProductsBySex","sex","defineRenderValue","tableType","title","row","value","indexOf","showSellSum","additionalData","sellSum","totalSellSum","toFixed","alphabetSortingFunc","a","b","nameA","toLowerCase","nameB","sortFuntions","brandsReport","parseFloat","sales","parseInt","createColumns","titles","res","map","idx","sorting","sorter","dataIndex","key","render","props","style","background","defineBackground","children","unshift","width","stockTitles","sellColumns","stockColumns","brandsReportColumns","commonReportColumns","fixed","folderLinks","unisex","axios","defaults","headers","post","instance","create","baseURL","fetchStock","options","folderName","inTransit","stockMode","folderFilter","link","result","data","fetchSales","counterparty","momentFrom","momentTo","moment","Date","format","counterpartyFilter","fetchCounterparty","filterByBrand","products","brand","filter","product","calculateStock","stockData","reduce","acc","size","depth","createDefaultStock","forEach","good","item","folder","stock","createDefaultDataSource","initial","sizesInitialValues","NB","total","StockTable","fetchFunc","useState","dataSource","setDataSource","isLoading","setIsLoading","setInTransit","setBrand","useParams","menu","theme","selectedKeys","Item","onClick","updateDataSource","newDataSource","find","el","totalW","totalD","useEffect","overlay","placement","onChange","prev","columns","columnstock","pagination","bordered","loading","mapSexToSymbol","filterBySex","str","re","checkSex","assortment","filterByProductName","names","filterFunc","Array","length","push","fillDataSource","productNames","dataSourceCopy","productFolder","findFolderByProductName","sellQuantity","Number","currentSellSum","formattedSellSum","countProductFolderSellSumBySize","Object","keys","RangePicker","DatePicker","SalesTable","counterparties","setCounterparty","setMomentFrom","setMomentTo","setShowSellSum","counterpartyMenu","currentCounterparty","meta","href","moments","_d","checked","createBrandsDefaultDataSource","items","sum","profit","sellCostSum","profitability","formatDataSource","entitiesForReport","slice","Report","reportBy","undefined","findIndex","mapSymbolToGender","М","Д","У","categories","CommonReport","then","salesData","gender","group","SubMenu","Menu","App","state","current","handleClick","e","setState","this","mode","to","exact","path","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3d31d01f.chunk.js","sourcesContent":["export const dateFormat = 'YYYY-MM-DD HH:mm:ss';\n\nexport const productGroups = {\n  girls:[\n    \"Аксессуары\",\n    \"Боди (длинный рукав)\",\n    \"Боди (короткий рукав)\",\n    \"Кофты\",\n    \"Наборы\",\n    \"Носочки\",\n    \"Песочник\",\n     \"Колготки\",\n     \"Ползунки\",\n    \"Пижамы\",\n    \"Платья\",\n    \"Регланы\",\n    \"Футболки\",\n    \"Человечки\",\n    \"Шорты\",\n    \"Штаны\",\n  ],\n  boys:[\n    \"Аксессуары\",\n    \"Боди (длинный рукав)\",\n    \"Боди (короткий рукав)\",\n    \"Кофты\",\n    \"Наборы\",\n    \"Носочки\",\n    \"Песочник\",\n    \"Пижамы\",\n    \"Ползунки\",\n    \"Регланы\",\n    \"Футболки\",\n    \"Человечки\",\n    \"Шорты\",\n    \"Штаны\",\n    ]\n}\n        \n\n\nexport const productNamesToFolders = {\n    \"ДР\":\"Боди (длинный рукав)\",\n    \"КР\":\"Боди (короткий рукав)\",\n    \"Кофт\":\"Кофты\",\n    \"Набор\":\"Наборы\",\n    \"Носочки\":\"Носочки\",\n    \"Ползунк\":\"Ползунки\",\n    \"Колгот\":\"Колготки\",\n    \"Песочник\":\"Песочник\",\n    \"Пижам\":\"Пижамы\",\n    \"Плать\":\"Платья\",\n    \"Реглан\":\"Регланы\",\n    \"Футболк\":\"Футболки\",\n    \"Человеч\":\"Человечки\",\n    \"Шорты\":\"Шорты\",\n    \"Штаны\": \"Штаны\",\n    \"Лосины\":\"Штаны\",\n    \"Костюм\":\"Наборы\"\n}\nexport const foldersToProductNames = {\n  \"Боди (длинный рукав)\":\"ДР\",\n  \"Боди (короткий рукав)\":\"КР\",\n  \"Кофты\":\"Кофт\",\n  \"Наборы\":[\"Набор\",\"Костюм\"],\n \"Носочки\": \"Носочки\",\n  \"Песочник\":\"Песочник\",\n \"Пижамы\": \"Пижам\",\n  \"Платья\":\"Плать\",\n  \"Регланы\":\"Реглан\",\n  \"Футболки\":\"Футболк\",\n \"Человечки\": \"Человеч\",\n  \"Шорты\":\"Шорты\",\n  \"Штаны\":[\"Штаны\",\"Лосины\"],\n  \"Ползунки\":\"Ползунк\",\n    \"Колготки\":\"Колгот\"\n}\n\nexport const sizes = [\n\"NB\",\n\"0-3\",\n\"1-2\",\n\"2-4\",\n\"3-6\",\n\"4-6\",\n\"6-9\",\n\"9-12\",\n\"12-18\",\n\"18-24\",\n\"24-36\",\n]\n\nexport const brands = [\n  \"all\",\n  \"bi baby\",\n  \"bimini\",\n  \"biorganic\",\n  \"Caramell\",\n  \"Disney baby\",\n  \"DreamKid\",\n  \"Dunnes\",\n  \"H&M\",\n  \"Little Angel\",\n  \"George\",\n  \"little life\",\n  \"Marks & Spencer\",\n  \"Matalan\",\n  \"Next\",\n  \"Tesco\",\n  \"KEHA\",\n  \"Мамине чудо\"\n];\n\n","import { sizes } from \"../data\"\n\nexport function getSize(name){\n  const re = /([0-9]+)-([0-9]+)|NB/g;\n  return name.match(re)[0];\n}\n\nexport function defineProductsBySex(sex,productGroups){\n  return sex === \"girls\" || sex === \"common\" ? productGroups['girls'] : productGroups['boys']\n}\n\n\n\nfunction defineRenderValue(tableType,title, row,value){\n  switch(tableType){\n    case \"sales\":\n      return (sizes.indexOf(title)) !== -1 ?\n      value &&`${row.showSellSum ?  row.additionalData.sellSum[title] : value} (${((row.additionalData.sellSum[title])*100/row.totalSellSum).toFixed(2)}%)` \n      : value\n      default:\n        return value\n  } \n\n }\n \nconst alphabetSortingFunc =function(a, b){\n  var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase()\n  if (nameA < nameB) \n    return -1\n  if (nameA > nameB)\n    return 1\n  return 0 \n  }\n\nfunction defineBackground(title,value){\n  return title === \"total\" ? \"white\" : parseInt(value) > 0 ? \"#C7E78F\":\"#e6948e\"\n}\n\nconst sortFuntions = {\n  brandsReport: (title) => (a, b) =>  parseFloat(a[title]) - parseFloat(b[title]),\n  sales: (title) => (a, b) => parseInt(a[title]) - parseInt(b[title]),\n  \n};\n\nexport function createColumns(titles,tableType){\n\n    const res = titles.map((title,idx)=>{\n      const sorting =\n        !!sortFuntions[tableType] && sizes.indexOf(title) === -1\n          ? { sorter: sortFuntions[tableType](title) }\n          : {};\n      return {\n        title: title,\n        dataIndex: title,\n        key: idx,\n        ...sorting,\n        render(value, row) {\n          const background = defineBackground(title, value);\n          return {\n            props: {\n              style: { background },\n            },\n            children: (\n              <div>{defineRenderValue(tableType, title, row, value)} </div>\n            ),\n          };\n        },\n      };\n    })\n    res.unshift(  {\n      title: 'Название',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: alphabetSortingFunc,\n      width:200\n    })\n    \n    return res\n  }\n  \nconst stockTitles = [...sizes,'total']\nconst sellTitles = [...sizes,'total',\"totalSellSum\"]\nconst brandsReportTitles=['sum','profit',\"profitability\"]\n\nexport const sellColumns = createColumns(sellTitles,\"sales\")\nexport const stockColumns = createColumns(stockTitles, \"stock\")\nexport const brandsReportColumns = createColumns(brandsReportTitles, \"brandsReport\")\n\n\n\nexport const commonReportColumns = [\n  {\n    title: \"Категория товаров\",\n    dataIndex: \"name\",\n    key: \"name\",\n    width: 100,\n    fixed: \"left\",\n  },\n  {\n    title: \"Girls\",\n    \n\n    children: [\n      {\n        title: \"Количество\",\n        dataIndex: [\"categories\",\"girls\",\"sellQuantity\"],\n        key: \"sellQuantity\",\n      },\n      {\n        title: \"Сумма, грн\",\n        dataIndex: [\"categories\",\"girls\",\"sellSum\"],\n        key: \"sellSum\",\n      },\n      {\n        title: \"Прибыль, грн\",\n        dataIndex: [\"categories\",\"girls\",\"profit\"],\n        key: \"profit\",\n      },\n      {\n        title: \"Рентабельность, %\",\n        dataIndex: [\"categories\",\"girls\",\"profitability\"],\n        key: \"profitability\",\n      },\n    ],\n  },\n  {\n    title: \"Boys\",\n\n    children: [\n      {\n        title: \"Количество\",\n        dataIndex: [\"categories\",\"boys\",\"sellQuantity\"],\n        key: \"sellQuantity\",\n        \n      },\n      {\n        title: \"Сумма, грн\",\n        dataIndex: [\"categories\",\"boys\",\"sellSum\"],\n        key: \"sellSum\",\n        \n      },\n      {\n        title: \"Прибыль, грн\",\n        dataIndex: [\"categories\",\"boys\",\"profit\"],\n        key: \"profit\",\n        \n      },\n      {\n        title: \"Рентабельность, %\",\n        dataIndex: [\"categories\",\"boys\",\"profitability\"],\n        key: \"profitability\",\n        \n      },\n    ],\n  },\n  {\n    title: \"Unisex\",\n\n    children: [\n      {\n        title: \"Количество\",\n        dataIndex: [\"categories\",\"unisex\",\"sellQuantity\"],\n        key: \"sellQuantity\",\n        \n      },\n      {\n        title: \"Сумма, грн\",\n        dataIndex: [\"categories\",\"unisex\",\"sellSum\"],\n        key: \"sellSum\",\n        \n      },\n      {\n        title: \"Прибыль, грн\",\n        dataIndex: [\"categories\",\"unisex\",\"profit\"],\n        key: \"profit\",\n        \n      },\n      {\n        title: \"Рентабельность, %\",\n        dataIndex: [\"categories\",\"unisex\",\"profitability\"],\n        key: \"profitability\",\n        \n      },\n    ],\n  },\n  {\n    title: \"Total\",\n\n    children: [\n      {\n        title: \"Количество\",\n        dataIndex: [\"categories\",\"total\",\"sellQuantity\"],\n        key: \"sellQuantity\",\n        \n      },\n      {\n        title: \"Сумма, грн\",\n        dataIndex: [\"categories\",\"total\",\"sellSum\"],\n        key: \"sellSum\",\n        \n      },\n      {\n        title: \"Прибыль, грн\",\n        dataIndex: [\"categories\",\"total\",\"profit\"],\n        key: \"profit\",\n        \n      },\n      {\n        title: \"Рентабельность, %\",\n        dataIndex: [\"categories\",\"total\",\"profitability\"],\n        key: \"profitability\",\n        \n      },\n    ],\n  }\n  // {\n  //   title: \"Total\",\n\n  //   children: [\n  //     {\n  //       title: \"Количество\",\n  //       dataIndex: \"sellQuantity\",\n  //       key: \"sellQuantity\",\n        \n  //     },\n  //     {\n  //       title: \"Сумма, грн\",\n  //       dataIndex: \"sellSum\",\n  //       key: \"sellSum\",\n        \n  //     },\n  //     {\n  //       title: \"Прибыль, грн\",\n  //       dataIndex: \"profit\",\n  //       key: \"profit\",\n        \n  //     },\n  //     {\n  //       title: \"Рентабельность, %\",\n  //       dataIndex: \"profitability\",\n  //       key: \"profitability\",\n        \n  //     },\n  //   ],\n  // },\n];\n","import axios from \"axios\"\nimport moment from 'moment';\nimport { dateFormat } from \"../data\";\n\n\nconst folderLinks = {\n  girls:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/c9ac503e-1d16-11eb-0a80-050d002dcd9a\",\n  boys:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/00cfa023-1d16-11eb-0a80-050d002dade8\",\n  unisex:\"https://online.moysklad.ru/api/remap/1.2/entity/productfolder/73475072-28e9-11eb-0a80-029000103030\"\n}\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\nconst instance = axios.create({baseURL:\"https://kapri-server.herokuapp.com\"})\n\nexport const fetchStock = async (options) => {\n  const { folderName, inTransit } = options;\n  const stockMode = inTransit ? \"all\" : \"positiveOnly\";\n  const folderFilter = folderName === 'common' ?  \"\" : `&filter=productFolder=${folderLinks[folderName]}`\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/stock/all?groupBy=consignment&filter=stockMode=${stockMode}&filter=inTransitOnly=${inTransit}` + folderFilter\n\n  const result = await instance.post(\"/\", { link });\n    return result.data;\n}\n\nexport const fetchSales = async (\n  counterparty,\n  momentFrom = \"2021-02-15 10:00:00\",\n  momentTo = moment(new Date()).format(dateFormat),\n) => {\n  const counterpartyFilter = !!counterparty ?`&filter=counterparty=${counterparty}` : \"\"\n  const link = `https://online.moysklad.ru/api/remap/1.2/report/profit/byvariant?momentFrom=${momentFrom}&momentTo=${momentTo}` + counterpartyFilter\n\n  const result = await instance.post(\n    '/',{link},\n   \n  );\n  return result.data\n};\n\nexport const fetchCounterparty = async () => {\n  const link = \"https://online.moysklad.ru/api/remap/1.2/report/profit/bycounterparty\"\n  const result = await instance.post(\"/\", { link });\n  return result.data\n}\n\n","import { productGroups, sizes } from \"../../data\"\nimport { defineProductsBySex, getSize } from \"../../utils/utils\"\n\nfunction createDefaultStock(sex){\n    const products = defineProductsBySex(sex,productGroups)\n    return products.map((product)=>{\n      return    {\n        name: product,\n        sizes: sizes.reduce((acc,size)=>{\n          return{...acc,[size]:{ width: 0, depth: 0,inTransit:0,}}\n        },{})\n      }\n    })\n  }\n\nexport const filterByBrand = (products, brand) => {\n    return products.filter((product) => {\n       return product.name.indexOf(brand) !== -1;\n     });\n   }\n   \nexport function calculateStock(products, sex, inTransit) {\n  const stockData = createDefaultStock(sex);\n  products.forEach((good) => {\n    const size = getSize(good.name);\n    stockData.forEach((item) => {\n      if (good.folder.name === item.name && !!item.sizes[size]) {\n        item.sizes[size].width += 1;\n        item.sizes[size].depth += inTransit ? good.inTransit : good.stock;\n      }\n    });\n  });\n  return stockData;\n}\n   \nexport function createDefaultDataSource(sex,initial=\"\"){\n  const products = defineProductsBySex(sex, productGroups)\n  const sizesInitialValues = sizes.reduce((acc,size)=>{\n    return {...acc,[size]:initial}\n  },{})\n  return products.map((product,idx)=>{\n  \n    return {\n      key: idx,\n      name: product,\n      NB: initial,\n      ...sizesInitialValues,\n      total: initial,\n      \n     \n    };\n  })\n}","import React,{useEffect,useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport { Table} from 'antd';\nimport { brands} from '../../data'\nimport {stockColumns} from '../../utils/utils'\nimport { fetchStock } from '../../core/api';\nimport { Checkbox } from 'antd';\nimport { Menu, Dropdown, Button } from 'antd';\nimport { calculateStock, createDefaultDataSource, filterByBrand } from './StockTable.functions';\n\n\n\nexport const StockTable = ({fetchFunc}) => {\n  const [dataSource, setDataSource] =useState(null)\n  const [isLoading,setIsLoading] = useState(false)\n  const [inTransit, setInTransit] =  useState(false)\n  const [brand,setBrand] = useState(\"all\")\n  const {sex} = useParams()\n  \n  const menu = \n (\n  <Menu theme=\"dark\" selectedKeys={[brand]}>\n    {brands.map(brand=>{\n      return   (\n      <Menu.Item  onClick ={()=>{setBrand(brand)}} key={brand}>\n        {brand}   \n    </Menu.Item>)\n    })}\n  \n  </Menu>\n);\n\n  const updateDataSource = async () => {\n    const newDataSource = createDefaultDataSource(sex);\n    setIsLoading(true);\n    const options = { folderName: sex, inTransit };\n    let products = await fetchStock(options);\n\n    if (brand !== \"all\") {\n      products = filterByBrand(products,brand)\n    }\n    const stockData = calculateStock(products,sex, inTransit)\n   \n    newDataSource.forEach((item) => {\n      const res = stockData.find((el) => item.name === el.name);\n      let totalW = 0;\n      let totalD = 0;\n\n      for (let size in res.sizes) {\n        totalW += res.sizes[size].width;\n        totalD += res.sizes[size].depth;\n        item[size] = `${res.sizes[size].depth} (${res.sizes[size].width}) `;\n      }\n      item.total = `${totalD} (${totalW})`;\n    });\n\n    setDataSource(newDataSource);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    updateDataSource(fetchFunc);\n  }, [sex, inTransit, brand]);\n\n  return (\n    <>\n      <Dropdown  overlay={menu} placement=\"bottomCenter\">\n        <Button>Бренд</Button>\n      </Dropdown>\n      <Checkbox style={{\"marginLeft\":\"30px\"}}onChange={() => setInTransit((prev) => !prev)}>\n        In transit\n      </Checkbox>\n      <Table\n        dataSource={dataSource}\n        columns={stockColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\n\n","import { productGroups, productNamesToFolders, sizes } from \"../../data\";\nimport { defineProductsBySex, getSize } from \"../../utils/utils\";\n\nconst mapSexToSymbol = {\n    boys: \"М\",\n    girls: \"Д\",\n    unisex: \"У\",\n  };\n\n\nexport function checkSex(str,sex){\n    const re = `^[${mapSexToSymbol[sex]}]{1}`;\n    const res = str.match(re);\n    if( res) {\n        return mapSexToSymbol[sex] === res[0];\n    }\n}\n\nexport function filterBySex(products, sex){\n  return sex === \"common\"\n    ? products\n    : products.filter((product) => checkSex(product.assortment.name, sex));\n}\n\nexport function filterByProductName(products,names){\n  let res = [];\n  const filterFunc = (name) => (product) =>\n    product.assortment.name.indexOf(name) !== -1;\n  if (names instanceof Array && names.length > 0) {\n    names.forEach((name) => {\n      res.push(...products.filter(filterFunc(name)));\n    });\n  } else {\n    res.push(...products.filter(filterFunc(names)));\n  }\n\n  return res;\n}\n\nexport function findFolderByProductName(dataSource,name){\n    return  dataSource.find((productFolder) => {\n        return productFolder.name === productNamesToFolders[name];\n      });\n}\nexport function countProductFolderSellSumBySize(productFolder,product, size){\n  const currentSellSum = productFolder[\"additionalData\"].sellSum[size]\n  const formattedSellSum = (product.sellSum / 100).toFixed(0)\n  if (currentSellSum) {\n    productFolder[\"additionalData\"].sellSum[size] += Number(formattedSellSum);\n  } else {\n    productFolder[\"additionalData\"].sellSum[size] = Number(formattedSellSum);\n  }\n}\nexport function fillDataSource(dataSource,productNames,products){\nconst dataSourceCopy = [...dataSource]\n  productNames.forEach((name) => {\n    filterByProductName(products, [name]).forEach((product) => {\n      const productFolder = findFolderByProductName(dataSourceCopy, name);\n      const size = getSize(product.assortment.name);\n      productFolder[size] += product.sellQuantity;\n      productFolder[\"total\"] += product.sellQuantity;\n      productFolder[\"sellSum\"] = +product.sellSum;\n      productFolder[\"totalSellSum\"] += Number((product.sellSum / 100).toFixed(0));\n      countProductFolderSellSumBySize(productFolder, product, size)      \n    });\n  });\n  return dataSourceCopy;\n}\n\nexport function createDefaultDataSource(sex,initial=\"\",showSellSum){\n  const products = defineProductsBySex(sex, productGroups)\n  const sizesInitialValues = sizes.reduce((acc,size)=>{\n    return {...acc,[size]:initial}\n  },{})\n  return products.map((product,idx)=>{\n  \n    return {\n      key: idx,\n      name: product,\n      NB: initial,\n      ...sizesInitialValues,\n      total: initial,\n      totalSellSum: initial,\n      additionalData: {\n        sellSum: {},\n      },\n      showSellSum\n    };\n  })\n}","import React,{useEffect,  useState} from 'react'\nimport { fetchSales } from '../../core/api'\nimport {productNamesToFolders,dateFormat} from '../../data'\nimport { sellColumns, } from '../../utils/utils'\nimport { DatePicker, Dropdown, Table, Button, Menu } from \"antd\";\nimport moment from 'moment';\nimport { useParams } from 'react-router-dom'\nimport { createDefaultDataSource, filterBySex, fillDataSource } from './SalesTable.functions';\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\n\nexport const productNames = Object.keys(productNamesToFolders);\n\nconst { RangePicker } = DatePicker;\n\nexport const SalesTable = ({counterparties}) => {\n  const { sex } = useParams();\n  const [dataSource, setDataSource] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [counterparty, setCounterparty] = useState(null);\n  const [momentFrom, setMomentFrom] = useState(\"\")\n  const [momentTo, setMomentTo] = useState(\"\")\n  const [showSellSum, setShowSellSum] = useState(true)\n\n  const counterpartyMenu = counterparties && (\n    <Menu theme=\"dark\" selectedKeys={[counterparty ? counterparty.name :\"All\"]}>\n      <Menu.Item\n        onClick={() => {\n          setCounterparty(null);\n        }}\n        key={\"All\"}\n      >\n        {\"All\"}\n      </Menu.Item>\n      {counterparties.map((item) => {\n        return (\n          <Menu.Item\n            onClick={() => {\n              setCounterparty(item.counterparty);\n            }}\n            key={item.counterparty.name}\n          >\n            {item.counterparty.name}\n          </Menu.Item>\n        );\n      })}\n    </Menu>\n  );\n\n  const updateDataSource = async ( counterparty,momentFrom, momentTo,) => {\n    setIsLoading(true);\n    let products = await fetchSales(counterparty, momentFrom, momentTo);\n    let dataSource = createDefaultDataSource(sex, 0, showSellSum);\n    products = filterBySex(products, sex);\n    dataSource = fillDataSource(dataSource, productNames, products);\n    setDataSource(dataSource)\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    let currentCounterparty = !!counterparty ? counterparty.meta.href :counterparty\n    updateDataSource(currentCounterparty,momentFrom, momentTo);\n  }, [sex,counterparty,showSellSum,momentFrom,momentTo]);\n  return (\n    <>\n        <RangePicker\n          onChange={(moments) => {\n            setMomentFrom(moment(moments[0]._d).format(dateFormat))\n            setMomentTo(moment(moments[1]._d).format(dateFormat));\n          }}\n          format={dateFormat}\n          size=\"large\"\n        />\n        <Dropdown overlay={counterpartyMenu}  placement=\"bottomCenter\">\n          <Button>{counterparty ? counterparty.name : \"Контрагент\"}</Button>\n        </Dropdown>\n        <Checkbox checked={showSellSum} style={{\"marginLeft\":\"30px\"}}onChange={() => setShowSellSum((prev) => !prev)}>\n        SellSum\n      </Checkbox>\n      <Table\n        dataSource={dataSource}\n        columns={sellColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n\n\n\n","\nexport function createBrandsDefaultDataSource(items){\n    const itemsCopy = [...items]\n    return itemsCopy.map((name,idx)=>{\n        \n        return {\n          key: idx,\n          name,\n          sum:0,\n          profit:0,\n          sellCostSum:0,\n          profitability:0\n        };\n      })\n  }\n\n\n export  const formatDataSource = (dataSource) => {\n    return dataSource.map((name) => {\n      const profitability = +((name.profit * 100) / name.sellCostSum).toFixed(\n        2\n      );\n      \n      return {\n        ...name,\n        sum: (name.sum / 100).toFixed(2),\n        profit: (name.profit / 100).toFixed(2),\n        profitability: !!profitability ? profitability + \"%\" : 0,\n      };\n    });\n  }\n\n export const fillDataSource = (dataSource, product, idx) => {\n   const data = [...dataSource];\n   if (idx > -1) {\n     data[idx] = {\n       ...data[idx],\n       sum: (data[idx].sum += +product.sellSum),\n       profit: (data[idx].profit += +product.profit),\n       sellCostSum: (data[idx].sellCostSum += +product.sellCostSum),\n     };\n   }\n   return data;\n };\n\n  export const filterByBrand = (products, brand) => {\n    const res =  products.filter((product) => {\n       return product.assortment.name.indexOf(brand) !== -1;\n     });\n     return res\n   }\n","import React,{useEffect, useState} from 'react'\nimport { useParams } from 'react-router-dom'\nimport { fetchSales } from '../../core/api';\nimport { brandsReportColumns, getSize } from '../../utils/utils';\nimport { createBrandsDefaultDataSource,fillDataSource,filterByBrand, formatDataSource } from './Report.functions';\nimport { DatePicker, Table } from 'antd';\nimport moment from 'moment';\nimport { filterBySex } from '../Sales/SalesTable.functions';\nimport { brands, dateFormat, sizes } from '../../data';\nconst { RangePicker } = DatePicker;\n\nconst entitiesForReport = {\n    brands:brands.slice(1),\n    sizes\n  }\nexport const Report = () => {\n    const { sex } = useParams();\n    const { reportBy } = useParams();\n    const [dataSource, setDataSource] = useState(createBrandsDefaultDataSource(entitiesForReport[reportBy]));\n    const [isLoading, setIsLoading] = useState(false);\n    const [momentFrom, setMomentFrom] = useState(\"\")\n    const [momentTo, setMomentTo] = useState(\"\")\n\n\n    const updateDataSource = async (momentFrom, momentTo) => {  \n        setIsLoading(true);\n        let data = await fetchSales(undefined,momentFrom,momentTo);\n         data = filterBySex(data, sex);\n         let dataSource = createBrandsDefaultDataSource(entitiesForReport[reportBy]);\n         if (reportBy === \"brands\") {\n           brands.forEach((brand) => {\n             const products = filterByBrand(data, brand);\n             products.forEach((product) => {\n               const idx = dataSource.findIndex((item) => item.name === brand);\n               dataSource = fillDataSource(dataSource, product, idx);\n             });\n           });\n         \n         } else if (reportBy === \"sizes\") {\n           data.forEach((product) => {\n            const idx = dataSource.findIndex((item) => item.name === getSize(product.assortment.name));  \n            dataSource = fillDataSource(dataSource,product,idx)\n           })\n         }\n         setDataSource(formatDataSource(dataSource))\n        setIsLoading(false);\n      };\n    useEffect(()=>{\n    updateDataSource(momentFrom,momentTo)\n    },[sex,momentFrom,momentTo,reportBy])\n\n    return (\n        <>\n        <RangePicker\n          onChange={(moments) => {\n              setMomentFrom(moment(moments[0]._d).format(dateFormat))\n              setMomentTo(moment(moments[1]._d).format(dateFormat))\n          }}\n          format={dateFormat}\n          size=\"large\"\n        />\n        <Table\n        style={{width:\"70vw\"}}\n        dataSource={dataSource}\n        columns={brandsReportColumns}\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n         />\n      </>\n    )\n}\n","import { productGroups } from \"../../data\";\n\nexport const mapSymbolToGender = {\n  М: \"boys\",\n  Д: \"girls\",\n  У: \"unisex\",\n};\n\nexport const defineGender = (str) => mapSymbolToGender[str[0]]\n\n\nexport const createDefaultDataSource = ()=>productGroups.girls.map((name) => {\n   \n    return  {\n        name,\n        categories: {\n          girls: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0\n          },\n          boys: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0\n          },\n          unisex: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0\n          },\n          total: {\n            sellQuantity: 0,\n            sellSum: 0,\n            profit: 0,\n            profitability: 0,\n            sellCostSum:0\n          }\n        },\n      }\n  }) ","import React, {useEffect,useState} from 'react'\n\nimport {  DatePicker, Table } from 'antd';\nimport {  commonReportColumns } from '../../utils/utils';\nimport {  filterByProductName,  } from '../Sales/SalesTable.functions';\nimport { fetchSales } from '../../core/api';\nimport { defineGender,createDefaultDataSource, } from './CommonReport.functions';\nimport { dateFormat, foldersToProductNames,  } from '../../data';\nimport moment from 'moment';\n\n\nconst { RangePicker } = DatePicker;\n\n\nexport const CommonReport = () => {\n    const [dataSource, setDataSource] = useState(createDefaultDataSource())\n    const [isLoading, setIsLoading] = useState(false)\n    const [momentFrom, setMomentFrom] = useState(\"\")\n    const [momentTo, setMomentTo] = useState(\"\")\n    useEffect(()=>{\n        setIsLoading(true)\n\n        fetchSales(undefined, momentFrom, momentTo).then((salesData) => {\n            const newDataSource = createDefaultDataSource()\n            newDataSource.forEach((productFolder) => {\n               const {categories} = productFolder\n               const filteredByFolder = filterByProductName(salesData,foldersToProductNames[productFolder.name] )\n                filteredByFolder.forEach((product) => {\n                    const gender = defineGender(product.assortment.name)\n                     categories[gender].sellQuantity += +product.sellQuantity\n                     categories[gender].sellSum  += +product.sellSum \n                     categories[gender].profit += +product.profit\n                     categories[gender].sellCostSum += +product.sellCostSum\n                    categories.total.sellQuantity += +product.sellQuantity\n                    categories.total.sellSum += +product.sellSum\n                    categories.total.profit += +product.profit\n                    categories.total.sellCostSum += +product.sellCostSum\n\n                    \n                })\n \n            })\n           newDataSource.forEach((productFolder) => {\n            const {categories} = productFolder\n\n               for(let group in productFolder.categories){\n                const profitability =\n                  !!productFolder.categories[group].sellCostSum &&\n                  +(\n                    (productFolder.categories[group].profit * 100) /\n                    productFolder.categories[group].sellCostSum\n                  ).toFixed(2);\n                  \n                   categories[group].sellSum = +(parseInt(categories[group].sellSum) / 100).toFixed(0)\n                   categories[group].profit = +(parseInt(categories[group].profit) / 100).toFixed(0)\n                   categories[group].profitability = !!profitability ? profitability + \"%\" : 0\n               }\n           })\n            setDataSource(newDataSource);\n            setIsLoading(false)\n        })\n    },[momentTo, momentFrom])\n\n\n    return (\n        <>\n        <RangePicker\n        style={{\"marginTop\":\"2rem\"}}\n          onChange={(moments) => {\n            setMomentFrom(moment(moments[0]._d).format(dateFormat))\n            setMomentTo(moment(moments[1]._d).format(dateFormat));\n          }}\n          format={dateFormat}\n          size=\"large\"\n        />\n        <Table\n        style={{width:\"70vw\"}}\n        dataSource={dataSource}\n        columns={commonReportColumns}\n        size=\"small\"\n        columnstock=\"3px\"\n        pagination={false}\n        bordered={true}\n        loading={isLoading}\n         />\n      </>\n    )\n}\n","import React from 'react'\nimport {Route,NavLink} from 'react-router-dom'\n\nimport { Menu } from 'antd';\nimport { StockTable } from './components/Stock/StockTable';\nimport { SalesTable } from './components/Sales/SalesTable';\nimport { fetchCounterparty } from './core/api';\nimport { Report } from './components/Report/Report';\nimport { CommonReport } from './components/CommonReport/CommonReport';\n\nconst { SubMenu } = Menu;\n\nclass App extends React.Component {\n  state = {\n    current: null,\n    counterparties:null\n  };\n  componentDidMount(){\n    fetchCounterparty().then((counterparties) => {\n      this.setState({counterparties})\n    });\n  }\n\n  handleClick = e => {\n    this.setState({ current: e.key });\n  };\n\n  render() {\n    const { current } = this.state;\n    return (\n      <>\n        \n          <Menu\n            onClick={this.handleClick}\n            selectedKeys={[current]}\n            mode=\"horizontal\"\n            theme=\"dark\"\n          >\n            <SubMenu key=\"boys\" title=\"Мальчики\">\n              <Menu.Item key=\"boysStock\">\n                <NavLink to=\"/stock/boys\">Oстатки </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"boysSales\">\n                <NavLink to=\"/sales/boys\">Продажи </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"boysBrandReport\">\n                <NavLink to=\"/report/boys/brands\">Отчет по брендам </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"boysSizesReport\">\n                <NavLink to=\"/report/boys/sizes\">Отчет по размерам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n\n            <SubMenu key=\"girls\" title=\"Девочки\">\n              <Menu.Item key=\"girlsStock\">\n                <NavLink to=\"/stock/girls\">Oстатки </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"girlsSales\">\n                <NavLink to=\"/sales/girls\">Продажи </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"girlsBrandReport\">\n                <NavLink to=\"/report/girls/brands\">Отчет по брендам </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"girlsSizesReport\">\n                <NavLink to=\"/report/girls/sizes\">Отчет по размерам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"unisex\" title=\"Унисекс\">\n              <Menu.Item key=\"unisexStock\">\n                <NavLink to=\"/stock/unisex\">Oстатки</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"unisexSales\">\n                <NavLink to=\"/sales/unisex\">Продажи</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"unisexBrandReport\">\n                <NavLink to=\"/report/unisex/brands\">Отчет по брендам </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"unisexSizesReport\">\n                <NavLink to=\"/report/unisex/sizes\">Отчет по размерам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu key=\"common\" title=\"Общее\">\n              <Menu.Item key=\"commonStock\">\n                <NavLink to=\"/stock/common\">Oстатки</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"commonSales\">\n                <NavLink to=\"/sales/common\">Продажи</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"commonBrandReport\">\n                <NavLink to=\"/report/common/brands\">Отчет по брендам </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"commonSizesReport\">\n                <NavLink to=\"/report/common/sizes\">Отчет по размерам </NavLink>\n              </Menu.Item>\n            </SubMenu>\n          </Menu>\n        \n        <Route exact path=\"/stock/:sex\" render={() => <StockTable />} />\n        <Route path=\"/sales/:sex\" render={() => <SalesTable counterparties={this.state.counterparties}/>} />\n        <Route path=\"/report/:sex/:reportBy\" render={() => <Report/>} />\n        <CommonReport/>\n      </>\n    );\n  }\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <HashRouter>\n      <App />\n   </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}